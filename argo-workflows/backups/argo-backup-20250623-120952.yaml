apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-17T08:10:25Z"
    generateName: argo-server-7f996ddf4c-
    generation: 1
    labels:
      app: argo-server
      pod-template-hash: 7f996ddf4c
    name: argo-server-7f996ddf4c-gjs7b
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argo-server-7f996ddf4c
      uid: f78cdc2e-5816-4a96-a799-2da7d567c7a4
    resourceVersion: "106974"
    uid: 410a67bd-83c6-4eb4-ab39-0451ed8c4e80
  spec:
    containers:
    - args:
      - server
      - --auth-mode
      - server
      - --auth-mode
      - client
      image: quay.io/argoproj/argocli:v3.6.10
      imagePullPolicy: IfNotPresent
      name: argo-server
      ports:
      - containerPort: 2746
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2746
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m6qpc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: argo-dev-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: argo-server
    serviceAccountName: argo-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-m6qpc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:39:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:21:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:21:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cb0a7c14aaed2284016f6aae139100f02d6dce61fbc92ede309c3fdd92e8019c
      image: quay.io/argoproj/argocli:v3.6.10
      imageID: quay.io/argoproj/argocli@sha256:0e8f3c2ca13ed0a5e58fa9bbb8ee5e1253c3e119b6959a44f3aff1e4151dc9b9
      lastState:
        terminated:
          containerID: containerd://f49bbbe7f0ce1f4fb1b8a11eb43b88dcbf44bdff34f111aa30a79048ad41c788
          exitCode: 1
          finishedAt: "2025-06-21T10:39:37Z"
          reason: Error
          startedAt: "2025-06-21T10:39:06Z"
      name: argo-server
      ready: true
      resources: {}
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-06-21T10:39:51Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 8737
      volumeMounts:
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m6qpc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: BestEffort
    startTime: "2025-06-17T08:10:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-17T08:10:25Z"
    generateName: httpbin-79f598f4cc-
    generation: 1
    labels:
      app: httpbin
      pod-template-hash: 79f598f4cc
    name: httpbin-79f598f4cc-z9xbp
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: httpbin-79f598f4cc
      uid: ec6842d4-0e26-43d7-bcf1-8ca15c16cf97
    resourceVersion: "106990"
    uid: be5b6efb-96e5-48df-88d5-fe887af0ce02
  spec:
    automountServiceAccountToken: false
    containers:
    - image: kong/httpbin
      imagePullPolicy: Always
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /get
          port: 80
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: main
      ports:
      - containerPort: 80
        name: api
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /get
          port: 80
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:39:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:21:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:21:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4f5863e0fad9acaf7ac64df64e0dbefe144dbecd0411daf12383a55abdb9e20f
      image: docker.io/kong/httpbin:latest
      imageID: docker.io/kong/httpbin@sha256:a6ac46531193a8009ca7d83d6a2d76b3114a7ab77c73aec5b8007c92206621f3
      lastState:
        terminated:
          containerID: containerd://d03214fbc0f94d2af9c037326594549f5acacc63bd21cce783fb87a75cda78c7
          exitCode: 137
          finishedAt: "2025-06-22T12:20:51Z"
          reason: Error
          startedAt: "2025-06-22T12:19:23Z"
      name: main
      ready: true
      resources: {}
      restartCount: 19
      started: true
      state:
        running:
          startedAt: "2025-06-22T12:21:32Z"
      user:
        linux:
          gid: 10001
          supplementalGroups:
          - 10001
          uid: 10001
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.2
    podIPs:
    - ip: 10.244.0.2
    qosClass: BestEffort
    startTime: "2025-06-17T08:10:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-17T08:10:25Z"
    generateName: minio-74fbfc7f88-
    generation: 1
    labels:
      app: minio
      pod-template-hash: 74fbfc7f88
    name: minio-74fbfc7f88-4htbz
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: minio-74fbfc7f88
      uid: 1663844f-28d7-4591-98ae-06e71c6b942e
    resourceVersion: "106992"
    uid: 3a5393c9-0bea-4503-88af-6c0e9b6b2a2a
  spec:
    automountServiceAccountToken: false
    containers:
    - command:
      - minio
      - server
      - --console-address
      - :9001
      - /data
      env:
      - name: MINIO_ACCESS_KEY
        value: admin
      - name: MINIO_SECRET_KEY
        value: password
      image: minio/minio:RELEASE.2022-11-17T23-20-09Z
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - mkdir
            - -p
            - /data/my-bucket
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /minio/health/live
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: main
      ports:
      - containerPort: 9000
        name: api
        protocol: TCP
      - containerPort: 9001
        name: dashboard
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /minio/health/ready
          port: 9000
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:39:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:21:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:21:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5cb2b0f785463cb0b2bf842c68a69b53ce8613c8dc6f18fa057b1188be418f69
      image: docker.io/minio/minio:RELEASE.2022-11-17T23-20-09Z
      imageID: docker.io/minio/minio@sha256:296095d34582d941610a3f06823bf9e2ef374744376eb4a5f20f877d2f2a1f4c
      lastState:
        terminated:
          containerID: containerd://d50e290227af1d0b6fd00867acf3642e405513c65d235eb68898f55e6bc4b594
          exitCode: 1
          finishedAt: "2025-06-22T12:21:24Z"
          reason: Error
          startedAt: "2025-06-22T12:19:01Z"
      name: main
      ready: true
      resources: {}
      restartCount: 23
      started: true
      state:
        running:
          startedAt: "2025-06-22T12:21:32Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.3
    podIPs:
    - ip: 10.244.0.3
    qosClass: BestEffort
    startTime: "2025-06-17T08:10:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750594200-4033871885
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750594200.validate-data-source
    creationTimestamp: "2025-06-22T12:11:01Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750594200
    name: ml-pipeline-cron-1750594200-data-validation-task-4033871885
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750594200
      uid: ce66b51c-808b-44e6-b16e-e32d9ac77d38
    resourceVersion: "106638"
    uid: e69f1670-8f1e-418e-9494-06fe7091a044
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750594200
      - name: ARGO_WORKFLOW_UID
        value: ce66b51c-808b-44e6-b16e-e32d9ac77d38
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-4033871885
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mf5l9
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-22T12:10:00Z\"\nprint(f\"\U0001F50D
        Validating data source: {dataset}\")\n\n# Simulate data validation work\nvalidation_time
        = random.uniform(10, 30)  # 10-30 seconds\ntime.sleep(validation_time)\n\n#
        Random validation results\nrecords_found = random.randint(800, 1200)\nvalidation_score
        = random.uniform(0.85, 0.98)\n\nprint(f\"✅ Data validation complete:\")\nprint(f\"
        \ Records found: {records_found}\")\nprint(f\"  Validation score: {validation_score:.3f}\")\nprint(f\"
        \ Duration: {validation_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-4033871885
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mf5l9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750594200
      - name: ARGO_WORKFLOW_UID
        value: ce66b51c-808b-44e6-b16e-e32d9ac77d38
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-validation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-22T12:10:00Z\\\"\\nprint(f\\\"\U0001F50D
          Validating data source: {dataset}\\\")\\n\\n# Simulate data validation work\\nvalidation_time
          = random.uniform(10, 30)  # 10-30 seconds\\ntime.sleep(validation_time)\\n\\n#
          Random validation results\\nrecords_found = random.randint(800, 1200)\\nvalidation_score
          = random.uniform(0.85, 0.98)\\n\\nprint(f\\\"✅ Data validation complete:\\\")\\nprint(f\\\"
          \ Records found: {records_found}\\\")\\nprint(f\\\"  Validation score: {validation_score:.3f}\\\")\\nprint(f\\\"
          \ Duration: {validation_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750594200/ml-pipeline-cron-1750594200-data-validation-task-4033871885\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-4033871885
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mf5l9
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-mf5l9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:14:23Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:12:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:13:29Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:13:29Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:11:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4d0233d6192c8517b9e1a3f50f99874c9ed925fb90c2f43bc213d1ddf45b59e7
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4d0233d6192c8517b9e1a3f50f99874c9ed925fb90c2f43bc213d1ddf45b59e7
          exitCode: 0
          finishedAt: "2025-06-22T12:13:16Z"
          reason: Completed
          startedAt: "2025-06-22T12:12:23Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mf5l9
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://8b3e3766ae2fb0ba456037f20b5ccbc2106a6d330c1f11a5c1828459500feae4
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8b3e3766ae2fb0ba456037f20b5ccbc2106a6d330c1f11a5c1828459500feae4
          exitCode: 64
          finishedAt: "2025-06-22T12:13:48Z"
          message: 'timed out waiting for the condition: failed to put file: Get "http://minio:9000/my-bucket/?location=":
            dial tcp 10.96.51.185:9000: connect: connection refused'
          reason: Error
          startedAt: "2025-06-22T12:12:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mf5l9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://93fa2134dcd3b6586cc793f74db7258caaa3eea5d597bb119a6b1d051378ed81
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://93fa2134dcd3b6586cc793f74db7258caaa3eea5d597bb119a6b1d051378ed81
          exitCode: 0
          finishedAt: "2025-06-22T12:11:54Z"
          reason: Completed
          startedAt: "2025-06-22T12:11:17Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mf5l9
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Failed
    podIP: 10.244.0.40
    podIPs:
    - ip: 10.244.0.40
    qosClass: Burstable
    startTime: "2025-06-22T12:11:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750594200-2786273045
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750594200.check-data-freshness
    creationTimestamp: "2025-06-22T12:11:04Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750594200
    name: ml-pipeline-cron-1750594200-freshness-check-task-2786273045
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750594200
      uid: ce66b51c-808b-44e6-b16e-e32d9ac77d38
    resourceVersion: "106637"
    uid: add17345-9589-494d-860f-09acb8a0fab7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750594200
      - name: ARGO_WORKFLOW_UID
        value: ce66b51c-808b-44e6-b16e-e32d9ac77d38
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-2786273045
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps7m
        readOnly: true
    - args:
      - "import time\nimport random\nfrom datetime import datetime, timedelta\n\nprint(\"\U0001F4C5
        Checking data freshness...\")\n\ncheck_time = random.uniform(5, 15)\ntime.sleep(check_time)\n\n#
        Simulate freshness check\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
        6))\nfreshness_hours = (datetime.now() - last_update).total_seconds() / 3600\n\nprint(f\"✅
        Data freshness check complete:\")\nprint(f\"  Last update: {last_update.strftime('%Y-%m-%d
        %H:%M')}\")\nprint(f\"  Data age: {freshness_hours:.1f} hours\")\nprint(f\"
        \ Check duration: {check_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-2786273045
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps7m
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750594200
      - name: ARGO_WORKFLOW_UID
        value: ce66b51c-808b-44e6-b16e-e32d9ac77d38
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"freshness-check-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\nfrom datetime import datetime, timedelta\\n\\nprint(\\\"\U0001F4C5
          Checking data freshness...\\\")\\n\\ncheck_time = random.uniform(5, 15)\\ntime.sleep(check_time)\\n\\n#
          Simulate freshness check\\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
          6))\\nfreshness_hours = (datetime.now() - last_update).total_seconds() /
          3600\\n\\nprint(f\\\"✅ Data freshness check complete:\\\")\\nprint(f\\\"
          \ Last update: {last_update.strftime('%Y-%m-%d %H:%M')}\\\")\\nprint(f\\\"
          \ Data age: {freshness_hours:.1f} hours\\\")\\nprint(f\\\"  Check duration:
          {check_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750594200/ml-pipeline-cron-1750594200-freshness-check-task-2786273045\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-2786273045
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps7m
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-5ps7m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:14:23Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:12:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:13:26Z"
      reason: PodFailed
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:13:26Z"
      reason: PodFailed
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:11:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://325640d53b532112e0d2767d89f6f5a3a5dd58340dc3764ec656d8f55c24b665
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://325640d53b532112e0d2767d89f6f5a3a5dd58340dc3764ec656d8f55c24b665
          exitCode: 0
          finishedAt: "2025-06-22T12:13:09Z"
          reason: Completed
          startedAt: "2025-06-22T12:12:23Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps7m
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://91df443fde1acf94689e3311c3027e670a4227a2ea76d14f84f1c4411b703881
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://91df443fde1acf94689e3311c3027e670a4227a2ea76d14f84f1c4411b703881
          exitCode: 64
          finishedAt: "2025-06-22T12:13:46Z"
          message: 'timed out waiting for the condition: failed to put file: Get "http://minio:9000/my-bucket/?location=":
            dial tcp 10.96.51.185:9000: connect: connection refused'
          reason: Error
          startedAt: "2025-06-22T12:12:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps7m
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://f30fe6732657144a0905d10065d92352ea6283df294bcc7279d03bcc6d035793
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f30fe6732657144a0905d10065d92352ea6283df294bcc7279d03bcc6d035793
          exitCode: 0
          finishedAt: "2025-06-22T12:11:54Z"
          reason: Completed
          startedAt: "2025-06-22T12:11:18Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps7m
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Failed
    podIP: 10.244.0.41
    podIPs:
    - ip: 10.244.0.41
    qosClass: Burstable
    startTime: "2025-06-22T12:11:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750594200-3222722495
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750594200.pipeline-start
    creationTimestamp: "2025-06-22T12:10:00Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750594200
    name: ml-pipeline-cron-1750594200-timing-marker-3222722495
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750594200
      uid: ce66b51c-808b-44e6-b16e-e32d9ac77d38
    resourceVersion: "106251"
    uid: cf7fd2f6-62e4-469f-8c22-5eb5c2680a03
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750594200
      - name: ARGO_WORKFLOW_UID
        value: ce66b51c-808b-44e6-b16e-e32d9ac77d38
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-3222722495
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4fk9
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_start\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750594200\",\n        \"uid\": \"ce66b51c-808b-44e6-b16e-e32d9ac77d38\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-22T12:10:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-3222722495
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4fk9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750594200
      - name: ARGO_WORKFLOW_UID
        value: ce66b51c-808b-44e6-b16e-e32d9ac77d38
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_start\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750594200\\\",\\n        \\\"uid\\\": \\\"ce66b51c-808b-44e6-b16e-e32d9ac77d38\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-22T12:10:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750594200/ml-pipeline-cron-1750594200-timing-marker-3222722495\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750594200-3222722495
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4fk9
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-v4fk9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:10:50Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:10:36Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:10:40Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:10:40Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:10:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://91b778f3576a8618a2c2a6db931b678aa74b0d367b67df8d3a76bb7573d59348
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://91b778f3576a8618a2c2a6db931b678aa74b0d367b67df8d3a76bb7573d59348
          exitCode: 0
          finishedAt: "2025-06-22T12:10:39Z"
          reason: Completed
          startedAt: "2025-06-22T12:10:37Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4fk9
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://05d3a395fdf3acb4dac13f33c5146dfbbf2c923b72cee5f4841c9095a692b9c2
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://05d3a395fdf3acb4dac13f33c5146dfbbf2c923b72cee5f4841c9095a692b9c2
          exitCode: 0
          finishedAt: "2025-06-22T12:10:40Z"
          reason: Completed
          startedAt: "2025-06-22T12:10:37Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4fk9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://a436d90700bbd26b0396cc961885e411475adbc982ef5ca521ea98cc9c105758
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a436d90700bbd26b0396cc961885e411475adbc982ef5ca521ea98cc9c105758
          exitCode: 0
          finishedAt: "2025-06-22T12:10:34Z"
          reason: Completed
          startedAt: "2025-06-22T12:10:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v4fk9
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.39
    podIPs:
    - ip: 10.244.0.39
    qosClass: Burstable
    startTime: "2025-06-22T12:10:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-2164760478
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.augment-data
    creationTimestamp: "2025-06-23T08:40:40Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-data-augmentation-task-2164760478
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "143955"
    uid: fda9fbc9-8195-4e5f-bb89-97ab7a15ad4a
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2164760478
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdvq7
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:40:00Z\"\nprint(f\"\U0001F3A8
        Augmenting data: {dataset}\")\n\n# Simulate data augmentation techniques\ntechniques
        = [\"rotation\", \"scaling\", \"color_adjust\", \"noise_addition\", \"cropping\"]\naugmented_samples
        = 0\ntotal_time = 0\n\nfor technique in techniques:\n    technique_time =
        random.uniform(12, 20)\n    samples = random.randint(100, 200)\n    \n    print(f\"
        \ {technique}: {technique_time:.1f}s, {samples} samples\")\n    time.sleep(technique_time)\n
        \   \n    augmented_samples += samples\n    total_time += technique_time\n\nprint(f\"✅
        Data augmentation complete:\")\nprint(f\"  Total augmented samples: {augmented_samples}\")\nprint(f\"
        \ Total duration: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2164760478
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdvq7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-augmentation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\nprint(f\\\"\U0001F3A8
          Augmenting data: {dataset}\\\")\\n\\n# Simulate data augmentation techniques\\ntechniques
          = [\\\"rotation\\\", \\\"scaling\\\", \\\"color_adjust\\\", \\\"noise_addition\\\",
          \\\"cropping\\\"]\\naugmented_samples = 0\\ntotal_time = 0\\n\\nfor technique
          in techniques:\\n    technique_time = random.uniform(12, 20)\\n    samples
          = random.randint(100, 200)\\n    \\n    print(f\\\"  {technique}: {technique_time:.1f}s,
          {samples} samples\\\")\\n    time.sleep(technique_time)\\n    \\n    augmented_samples
          += samples\\n    total_time += technique_time\\n\\nprint(f\\\"✅ Data augmentation
          complete:\\\")\\nprint(f\\\"  Total augmented samples: {augmented_samples}\\\")\\nprint(f\\\"
          \ Total duration: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-data-augmentation-task-2164760478\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2164760478
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdvq7
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-pdvq7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:42:39Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:42Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:42:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:42:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fffa4f50ba220886b7e4dc77518d91f24ab7f1e2959413d184ae43ce5902ed36
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fffa4f50ba220886b7e4dc77518d91f24ab7f1e2959413d184ae43ce5902ed36
          exitCode: 0
          finishedAt: "2025-06-23T08:42:36Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdvq7
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://4618fcbc3922d645c7bd2a83d7a8b862997d162be1fe7c3a32d0f8a886ee0ce4
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4618fcbc3922d645c7bd2a83d7a8b862997d162be1fe7c3a32d0f8a886ee0ce4
          exitCode: 0
          finishedAt: "2025-06-23T08:42:37Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdvq7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://6a668cf34adeab9ff2c7824d64a59acc05e6abbb86bc62e96b1d9cd92a51e484
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6a668cf34adeab9ff2c7824d64a59acc05e6abbb86bc62e96b1d9cd92a51e484
          exitCode: 0
          finishedAt: "2025-06-23T08:40:41Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:41Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdvq7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.88
    podIPs:
    - ip: 10.244.0.88
    qosClass: Burstable
    startTime: "2025-06-23T08:40:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-3036379165
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.validate-data-source
    creationTimestamp: "2025-06-23T08:40:10Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-data-validation-task-3036379165
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "143763"
    uid: 15c38afb-aa0b-4684-9995-c6ec98be5f44
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-3036379165
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct5mt
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:40:00Z\"\nprint(f\"\U0001F50D
        Validating data source: {dataset}\")\n\n# Simulate data validation work\nvalidation_time
        = random.uniform(10, 30)  # 10-30 seconds\ntime.sleep(validation_time)\n\n#
        Random validation results\nrecords_found = random.randint(800, 1200)\nvalidation_score
        = random.uniform(0.85, 0.98)\n\nprint(f\"✅ Data validation complete:\")\nprint(f\"
        \ Records found: {records_found}\")\nprint(f\"  Validation score: {validation_score:.3f}\")\nprint(f\"
        \ Duration: {validation_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-3036379165
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct5mt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-validation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\nprint(f\\\"\U0001F50D
          Validating data source: {dataset}\\\")\\n\\n# Simulate data validation work\\nvalidation_time
          = random.uniform(10, 30)  # 10-30 seconds\\ntime.sleep(validation_time)\\n\\n#
          Random validation results\\nrecords_found = random.randint(800, 1200)\\nvalidation_score
          = random.uniform(0.85, 0.98)\\n\\nprint(f\\\"✅ Data validation complete:\\\")\\nprint(f\\\"
          \ Records found: {records_found}\\\")\\nprint(f\\\"  Validation score: {validation_score:.3f}\\\")\\nprint(f\\\"
          \ Duration: {validation_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-data-validation-task-3036379165\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-3036379165
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct5mt
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-ct5mt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:33Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:31Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:31Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1f14da390707e194f86c97ad2015d5ae560d6ddf420a6b5e70a67c07992b5cd1
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1f14da390707e194f86c97ad2015d5ae560d6ddf420a6b5e70a67c07992b5cd1
          exitCode: 0
          finishedAt: "2025-06-23T08:40:30Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct5mt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://3909c18f3e79a54a586ddd89b005d9ff62de89b66b3245be6407fbbfb72ee17b
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3909c18f3e79a54a586ddd89b005d9ff62de89b66b3245be6407fbbfb72ee17b
          exitCode: 0
          finishedAt: "2025-06-23T08:40:31Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct5mt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://fef5e826662b1d60f847b41ca06544b7d9e0ee2dca9d4a227604405b5057dcb7
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fef5e826662b1d60f847b41ca06544b7d9e0ee2dca9d4a227604405b5057dcb7
          exitCode: 0
          finishedAt: "2025-06-23T08:40:11Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ct5mt
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.85
    podIPs:
    - ip: 10.244.0.85
    qosClass: Burstable
    startTime: "2025-06-23T08:40:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-119203063
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.extract-features
    creationTimestamp: "2025-06-23T08:40:40Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-feature-extraction-task-119203063
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "143998"
    uid: b9541739-2cb5-4fd3-967d-fbbe983a45c0
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-119203063
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2c7r7
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:40:00Z\"\nbatch_size
        = int(\"1000\")\n\nprint(f\"\U0001F527 Extracting features from: {dataset}\")\nprint(f\"Batch
        size: {batch_size}\")\n\n# Simulate feature extraction with batches\nbatches
        = 5\ntotal_features = 0\ntotal_time = 0\n\nfor batch in range(1, batches +
        1):\n    batch_time = random.uniform(15, 25)  # 15-25 seconds per batch\n
        \   features_extracted = random.randint(150, 250)\n    \n    print(f\"  Batch
        {batch}/{batches}: {batch_time:.1f}s, {features_extracted} features\")\n    time.sleep(batch_time)\n
        \   \n    total_features += features_extracted\n    total_time += batch_time\n\nprint(f\"✅
        Feature extraction complete:\")\nprint(f\"  Total features: {total_features}\")\nprint(f\"
        \ Total duration: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-119203063
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2c7r7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"feature-extraction-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\nbatch_size
          = int(\\\"1000\\\")\\n\\nprint(f\\\"\U0001F527 Extracting features from:
          {dataset}\\\")\\nprint(f\\\"Batch size: {batch_size}\\\")\\n\\n# Simulate
          feature extraction with batches\\nbatches = 5\\ntotal_features = 0\\ntotal_time
          = 0\\n\\nfor batch in range(1, batches + 1):\\n    batch_time = random.uniform(15,
          25)  # 15-25 seconds per batch\\n    features_extracted = random.randint(150,
          250)\\n    \\n    print(f\\\"  Batch {batch}/{batches}: {batch_time:.1f}s,
          {features_extracted} features\\\")\\n    time.sleep(batch_time)\\n    \\n
          \   total_features += features_extracted\\n    total_time += batch_time\\n\\nprint(f\\\"✅
          Feature extraction complete:\\\")\\nprint(f\\\"  Total features: {total_features}\\\")\\nprint(f\\\"
          \ Total duration: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-feature-extraction-task-119203063\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-119203063
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2c7r7
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-2c7r7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:42:58Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:42Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:42:56Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:42:56Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://19126e279ebc6208bf82f65b534e33206929c1ff37da9402851af221415c543c
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://19126e279ebc6208bf82f65b534e33206929c1ff37da9402851af221415c543c
          exitCode: 0
          finishedAt: "2025-06-23T08:42:55Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2c7r7
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://8c844008ffa42a486bc40276fd9e4a69877df447d67c46c6c9f5585b2b83f000
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8c844008ffa42a486bc40276fd9e4a69877df447d67c46c6c9f5585b2b83f000
          exitCode: 0
          finishedAt: "2025-06-23T08:42:56Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2c7r7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://d437734b076098132cf11bafd43b13a61ff01337bed1db9cf90455eb43a02e4e
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d437734b076098132cf11bafd43b13a61ff01337bed1db9cf90455eb43a02e4e
          exitCode: 0
          finishedAt: "2025-06-23T08:40:41Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:41Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2c7r7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.87
    podIPs:
    - ip: 10.244.0.87
    qosClass: Burstable
    startTime: "2025-06-23T08:40:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-2160159941
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.check-data-freshness
    creationTimestamp: "2025-06-23T08:40:10Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-freshness-check-task-2160159941
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "143730"
    uid: cfa8fbd5-930c-4a4b-bc93-e1dc54e98154
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2160159941
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shgcp
        readOnly: true
    - args:
      - "import time\nimport random\nfrom datetime import datetime, timedelta\n\nprint(\"\U0001F4C5
        Checking data freshness...\")\n\ncheck_time = random.uniform(5, 15)\ntime.sleep(check_time)\n\n#
        Simulate freshness check\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
        6))\nfreshness_hours = (datetime.now() - last_update).total_seconds() / 3600\n\nprint(f\"✅
        Data freshness check complete:\")\nprint(f\"  Last update: {last_update.strftime('%Y-%m-%d
        %H:%M')}\")\nprint(f\"  Data age: {freshness_hours:.1f} hours\")\nprint(f\"
        \ Check duration: {check_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2160159941
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shgcp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"freshness-check-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\nfrom datetime import datetime, timedelta\\n\\nprint(\\\"\U0001F4C5
          Checking data freshness...\\\")\\n\\ncheck_time = random.uniform(5, 15)\\ntime.sleep(check_time)\\n\\n#
          Simulate freshness check\\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
          6))\\nfreshness_hours = (datetime.now() - last_update).total_seconds() /
          3600\\n\\nprint(f\\\"✅ Data freshness check complete:\\\")\\nprint(f\\\"
          \ Last update: {last_update.strftime('%Y-%m-%d %H:%M')}\\\")\\nprint(f\\\"
          \ Data age: {freshness_hours:.1f} hours\\\")\\nprint(f\\\"  Check duration:
          {check_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-freshness-check-task-2160159941\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2160159941
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shgcp
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-shgcp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:21Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:19Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:19Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9d825d80a133b00ef919ba9ad6ebd54873e8efe0c6a642b03cd6769c5ee43a60
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9d825d80a133b00ef919ba9ad6ebd54873e8efe0c6a642b03cd6769c5ee43a60
          exitCode: 0
          finishedAt: "2025-06-23T08:40:18Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shgcp
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://eab599686cb1504c61dcbdd7f0d0f852cb85419130c5865fe4274cb50033713c
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://eab599686cb1504c61dcbdd7f0d0f852cb85419130c5865fe4274cb50033713c
          exitCode: 0
          finishedAt: "2025-06-23T08:40:19Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shgcp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://d3bd471a3438e837e695b8bcc7d9a03afadbee9fb035e667ed8d0168922434f7
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d3bd471a3438e837e695b8bcc7d9a03afadbee9fb035e667ed8d0168922434f7
          exitCode: 0
          finishedAt: "2025-06-23T08:40:11Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shgcp
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.86
    podIPs:
    - ip: 10.244.0.86
    qosClass: Burstable
    startTime: "2025-06-23T08:40:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-928691155
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.evaluate-model
    creationTimestamp: "2025-06-23T08:45:07Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-model-evaluation-task-928691155
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "144290"
    uid: cedb5467-4005-4c70-969a-b6ae4ca3b7bc
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-928691155
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jlwbp
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:40:00Z\"\nprint(f\"\U0001F4CA
        Evaluating model on: {dataset}\")\n\n# Simulate model evaluation\neval_time
        = random.uniform(20, 35)\n\n# Generate evaluation metrics\nprecision = random.uniform(0.78,
        0.92)\nrecall = random.uniform(0.75, 0.90)\nf1_score = 2 * (precision * recall)
        / (precision + recall)\n\ntime.sleep(eval_time)\n\nprint(f\"✅ Model evaluation
        complete:\")\nprint(f\"  Precision: {precision:.3f}\")\nprint(f\"  Recall:
        {recall:.3f}\")\nprint(f\"  F1-Score: {f1_score:.3f}\")\nprint(f\"  Evaluation
        time: {eval_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-928691155
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jlwbp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"model-evaluation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\nprint(f\\\"\U0001F4CA
          Evaluating model on: {dataset}\\\")\\n\\n# Simulate model evaluation\\neval_time
          = random.uniform(20, 35)\\n\\n# Generate evaluation metrics\\nprecision
          = random.uniform(0.78, 0.92)\\nrecall = random.uniform(0.75, 0.90)\\nf1_score
          = 2 * (precision * recall) / (precision + recall)\\n\\ntime.sleep(eval_time)\\n\\nprint(f\\\"✅
          Model evaluation complete:\\\")\\nprint(f\\\"  Precision: {precision:.3f}\\\")\\nprint(f\\\"
          \ Recall: {recall:.3f}\\\")\\nprint(f\\\"  F1-Score: {f1_score:.3f}\\\")\\nprint(f\\\"
          \ Evaluation time: {eval_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-model-evaluation-task-928691155\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-928691155
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jlwbp
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-jlwbp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:47Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:09Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:46Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:46Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2d8857310892a2cc3b509bb9a1c3add40cc825bb8ae9de1f6164c5236481bf57
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2d8857310892a2cc3b509bb9a1c3add40cc825bb8ae9de1f6164c5236481bf57
          exitCode: 0
          finishedAt: "2025-06-23T08:45:45Z"
          reason: Completed
          startedAt: "2025-06-23T08:45:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jlwbp
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://92c1f71ba526ceb8414c58afaa244af9000aabb41ba2a7fe0de81e1e3605ecde
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://92c1f71ba526ceb8414c58afaa244af9000aabb41ba2a7fe0de81e1e3605ecde
          exitCode: 0
          finishedAt: "2025-06-23T08:45:46Z"
          reason: Completed
          startedAt: "2025-06-23T08:45:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jlwbp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://42281c99c2d6ad70d22a07a22f88235884173b17134d90965b045a12f0cfd1ca
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://42281c99c2d6ad70d22a07a22f88235884173b17134d90965b045a12f0cfd1ca
          exitCode: 0
          finishedAt: "2025-06-23T08:45:09Z"
          reason: Completed
          startedAt: "2025-06-23T08:45:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jlwbp
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.90
    podIPs:
    - ip: 10.244.0.90
    qosClass: Burstable
    startTime: "2025-06-23T08:45:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-2291035590
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.train-model
    creationTimestamp: "2025-06-23T08:43:07Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-model-training-task-2291035590
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "144189"
    uid: 95bec3e7-fa9b-46b4-b67a-c2fd9522df71
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2291035590
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4scck
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:40:00Z\"\nprint(f\"\U0001F916
        Training model on: {dataset}\")\n\n# Simulate model training epochs  \nepochs
        = 3\ntotal_time = 0\nfinal_accuracy = 0\n\nfor epoch in range(1, epochs +
        1):\n    epoch_time = random.uniform(25, 40)  # Longer training time\n    accuracy
        = random.uniform(0.70 + (epoch * 0.05), 0.85 + (epoch * 0.03))\n    loss =
        random.uniform(0.8 - (epoch * 0.15), 0.5 - (epoch * 0.05))\n    \n    print(f\"
        \ Epoch {epoch}/{epochs}: {epoch_time:.1f}s\")\n    print(f\"    Accuracy:
        {accuracy:.3f}, Loss: {loss:.3f}\")\n    \n    time.sleep(epoch_time)\n    total_time
        += epoch_time\n    final_accuracy = accuracy\n\nprint(f\"✅ Model training
        complete:\")\nprint(f\"  Final accuracy: {final_accuracy:.3f}\")\nprint(f\"
        \ Total training time: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2291035590
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4scck
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"model-training-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\nprint(f\\\"\U0001F916
          Training model on: {dataset}\\\")\\n\\n# Simulate model training epochs
          \ \\nepochs = 3\\ntotal_time = 0\\nfinal_accuracy = 0\\n\\nfor epoch in
          range(1, epochs + 1):\\n    epoch_time = random.uniform(25, 40)  # Longer
          training time\\n    accuracy = random.uniform(0.70 + (epoch * 0.05), 0.85
          + (epoch * 0.03))\\n    loss = random.uniform(0.8 - (epoch * 0.15), 0.5
          - (epoch * 0.05))\\n    \\n    print(f\\\"  Epoch {epoch}/{epochs}: {epoch_time:.1f}s\\\")\\n
          \   print(f\\\"    Accuracy: {accuracy:.3f}, Loss: {loss:.3f}\\\")\\n    \\n
          \   time.sleep(epoch_time)\\n    total_time += epoch_time\\n    final_accuracy
          = accuracy\\n\\nprint(f\\\"✅ Model training complete:\\\")\\nprint(f\\\"
          \ Final accuracy: {final_accuracy:.3f}\\\")\\nprint(f\\\"  Total training
          time: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-model-training-task-2291035590\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-2291035590
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4scck
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-4scck
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:44:59Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:43:08Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:44:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:44:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:43:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8c41478b312b3275efea64950c6572aab63db5fa708a7667716344050015029a
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8c41478b312b3275efea64950c6572aab63db5fa708a7667716344050015029a
          exitCode: 0
          finishedAt: "2025-06-23T08:44:57Z"
          reason: Completed
          startedAt: "2025-06-23T08:43:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4scck
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://8abe5b6a2cf01fa2fafe699e0684df166d10b847a1beb5ff105f7b79b3a780c2
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8abe5b6a2cf01fa2fafe699e0684df166d10b847a1beb5ff105f7b79b3a780c2
          exitCode: 0
          finishedAt: "2025-06-23T08:44:58Z"
          reason: Completed
          startedAt: "2025-06-23T08:43:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4scck
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://4224002994a3090966ae25966abc04718c7b75ae184c9b0bff783b7af777582f
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4224002994a3090966ae25966abc04718c7b75ae184c9b0bff783b7af777582f
          exitCode: 0
          finishedAt: "2025-06-23T08:43:08Z"
          reason: Completed
          startedAt: "2025-06-23T08:43:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4scck
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.89
    podIPs:
    - ip: 10.244.0.89
    qosClass: Burstable
    startTime: "2025-06-23T08:43:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-643344290
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.save-results
    creationTimestamp: "2025-06-23T08:45:56Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-results-storage-task-643344290
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "144407"
    uid: f4f3d1b4-ba7b-497a-bcac-5243e75a26db
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-643344290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2tkc
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:40:00Z\"\nprint(f\"\U0001F4BE
        Storing results for: {dataset}\")\n\n# Simulate results storage\nstorage_tasks
        = [\"save_model\", \"save_metrics\", \"update_registry\", \"create_report\"]\ntotal_time
        = 0\n\nfor task in storage_tasks:\n    task_time = random.uniform(8, 15)\n
        \   print(f\"  {task}: {task_time:.1f}s\")\n    time.sleep(task_time)\n    total_time
        += task_time\n\nprint(f\"✅ Results storage complete:\")\nprint(f\"  Total
        storage time: {total_time:.1f}s\")\nprint(f\"\U0001F517 Integration point:
        Use S3Utils for model artifact storage\") \n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-643344290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2tkc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"results-storage-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\nprint(f\\\"\U0001F4BE
          Storing results for: {dataset}\\\")\\n\\n# Simulate results storage\\nstorage_tasks
          = [\\\"save_model\\\", \\\"save_metrics\\\", \\\"update_registry\\\", \\\"create_report\\\"]\\ntotal_time
          = 0\\n\\nfor task in storage_tasks:\\n    task_time = random.uniform(8,
          15)\\n    print(f\\\"  {task}: {task_time:.1f}s\\\")\\n    time.sleep(task_time)\\n
          \   total_time += task_time\\n\\nprint(f\\\"✅ Results storage complete:\\\")\\nprint(f\\\"
          \ Total storage time: {total_time:.1f}s\\\")\\nprint(f\\\"\U0001F517 Integration
          point: Use S3Utils for model artifact storage\\\") \\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-results-storage-task-643344290\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-643344290
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2tkc
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-g2tkc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:48Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:46Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:46Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:45:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9fe3dbe21746b0168f34b006f118cb626fa41a2941bfcf06ed869c428b1956d0
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9fe3dbe21746b0168f34b006f118cb626fa41a2941bfcf06ed869c428b1956d0
          exitCode: 0
          finishedAt: "2025-06-23T08:46:46Z"
          reason: Completed
          startedAt: "2025-06-23T08:45:57Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2tkc
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://24e2b5841f8d8e91f22b96142ceeb7c6f718e5f6ca83969cc328ed16496889c2
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://24e2b5841f8d8e91f22b96142ceeb7c6f718e5f6ca83969cc328ed16496889c2
          exitCode: 0
          finishedAt: "2025-06-23T08:46:46Z"
          reason: Completed
          startedAt: "2025-06-23T08:45:57Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2tkc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://3f283f4c61dcb77a9632b422f5086f02d916a06eedb2d8574f0fdbebc6a9b984
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3f283f4c61dcb77a9632b422f5086f02d916a06eedb2d8574f0fdbebc6a9b984
          exitCode: 0
          finishedAt: "2025-06-23T08:45:57Z"
          reason: Completed
          startedAt: "2025-06-23T08:45:57Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2tkc
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.91
    podIPs:
    - ip: 10.244.0.91
    qosClass: Burstable
    startTime: "2025-06-23T08:45:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-1650384538
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.pipeline-end
    creationTimestamp: "2025-06-23T08:46:56Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-timing-marker-1650384538
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "144456"
    uid: 17695c05-f3c7-4932-9d2e-2a752a05df5b
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-1650384538
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xwhhd
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_complete\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750668000\",\n        \"uid\": \"50fa7a8e-69e5-443d-9cdb-87487840366e\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-23T08:40:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-1650384538
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xwhhd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_complete\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750668000\\\",\\n        \\\"uid\\\": \\\"50fa7a8e-69e5-443d-9cdb-87487840366e\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-timing-marker-1650384538\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-1650384538
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xwhhd
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-xwhhd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:47:01Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:46:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e3b2fc5ae3954e382fee600e4245f48267dd60b58bf234bd536637a10fa75833
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e3b2fc5ae3954e382fee600e4245f48267dd60b58bf234bd536637a10fa75833
          exitCode: 0
          finishedAt: "2025-06-23T08:46:58Z"
          reason: Completed
          startedAt: "2025-06-23T08:46:57Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xwhhd
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://94f9f4b76f07fbb0590dc885d0359ba52f441c81c3acfd3d1ad96f663382ef86
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://94f9f4b76f07fbb0590dc885d0359ba52f441c81c3acfd3d1ad96f663382ef86
          exitCode: 0
          finishedAt: "2025-06-23T08:46:59Z"
          reason: Completed
          startedAt: "2025-06-23T08:46:57Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xwhhd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://b92299a11046b3567c78620c72ef0f95612a99e3ae6b6774b05c541f5af85489
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b92299a11046b3567c78620c72ef0f95612a99e3ae6b6774b05c541f5af85489
          exitCode: 0
          finishedAt: "2025-06-23T08:46:57Z"
          reason: Completed
          startedAt: "2025-06-23T08:46:56Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xwhhd
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.92
    podIPs:
    - ip: 10.244.0.92
    qosClass: Burstable
    startTime: "2025-06-23T08:46:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668000-238333967
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668000.pipeline-start
    creationTimestamp: "2025-06-23T08:40:00Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668000
    name: ml-pipeline-cron-1750668000-timing-marker-238333967
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668000
      uid: 50fa7a8e-69e5-443d-9cdb-87487840366e
    resourceVersion: "143662"
    uid: 6f6203bb-95e3-4afd-9dab-66e58c52ed9d
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-238333967
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkjpf
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_start\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750668000\",\n        \"uid\": \"50fa7a8e-69e5-443d-9cdb-87487840366e\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-23T08:40:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-238333967
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkjpf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668000
      - name: ARGO_WORKFLOW_UID
        value: 50fa7a8e-69e5-443d-9cdb-87487840366e
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_start\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750668000\\\",\\n        \\\"uid\\\": \\\"50fa7a8e-69e5-443d-9cdb-87487840366e\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-23T08:40:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668000/ml-pipeline-cron-1750668000-timing-marker-238333967\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668000-238333967
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkjpf
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-rkjpf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:06Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:02Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:04Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:04Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:40:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b4d00a6c1135344d027c69da39fd1ce9cf4e723494c943cb1166aa9542909f61
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b4d00a6c1135344d027c69da39fd1ce9cf4e723494c943cb1166aa9542909f61
          exitCode: 0
          finishedAt: "2025-06-23T08:40:03Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkjpf
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://e58bf25af270fc7fe1a88a981597c59133137ee1dd4f63c3f35c6ab8399c1dfb
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e58bf25af270fc7fe1a88a981597c59133137ee1dd4f63c3f35c6ab8399c1dfb
          exitCode: 0
          finishedAt: "2025-06-23T08:40:04Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkjpf
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://a95ae33569b6bc6b383021a870067d83d5f43cf04b407ae016bcd129f8b77716
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a95ae33569b6bc6b383021a870067d83d5f43cf04b407ae016bcd129f8b77716
          exitCode: 0
          finishedAt: "2025-06-23T08:40:01Z"
          reason: Completed
          startedAt: "2025-06-23T08:40:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rkjpf
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.84
    podIPs:
    - ip: 10.244.0.84
    qosClass: Burstable
    startTime: "2025-06-23T08:40:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-3662627788
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.augment-data
    creationTimestamp: "2025-06-23T08:50:41Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-data-augmentation-task-3662627788
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "145073"
    uid: 6d9a95d2-7ab9-41b7-852d-672621947cc1
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-3662627788
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7n8s7
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:50:00Z\"\nprint(f\"\U0001F3A8
        Augmenting data: {dataset}\")\n\n# Simulate data augmentation techniques\ntechniques
        = [\"rotation\", \"scaling\", \"color_adjust\", \"noise_addition\", \"cropping\"]\naugmented_samples
        = 0\ntotal_time = 0\n\nfor technique in techniques:\n    technique_time =
        random.uniform(12, 20)\n    samples = random.randint(100, 200)\n    \n    print(f\"
        \ {technique}: {technique_time:.1f}s, {samples} samples\")\n    time.sleep(technique_time)\n
        \   \n    augmented_samples += samples\n    total_time += technique_time\n\nprint(f\"✅
        Data augmentation complete:\")\nprint(f\"  Total augmented samples: {augmented_samples}\")\nprint(f\"
        \ Total duration: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-3662627788
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7n8s7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-augmentation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\nprint(f\\\"\U0001F3A8
          Augmenting data: {dataset}\\\")\\n\\n# Simulate data augmentation techniques\\ntechniques
          = [\\\"rotation\\\", \\\"scaling\\\", \\\"color_adjust\\\", \\\"noise_addition\\\",
          \\\"cropping\\\"]\\naugmented_samples = 0\\ntotal_time = 0\\n\\nfor technique
          in techniques:\\n    technique_time = random.uniform(12, 20)\\n    samples
          = random.randint(100, 200)\\n    \\n    print(f\\\"  {technique}: {technique_time:.1f}s,
          {samples} samples\\\")\\n    time.sleep(technique_time)\\n    \\n    augmented_samples
          += samples\\n    total_time += technique_time\\n\\nprint(f\\\"✅ Data augmentation
          complete:\\\")\\nprint(f\\\"  Total augmented samples: {augmented_samples}\\\")\\nprint(f\\\"
          \ Total duration: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-data-augmentation-task-3662627788\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-3662627788
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7n8s7
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-7n8s7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:05Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:43Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:03Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:03Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://50c20d2eda58420c6e772a81efd1bfc1e46cfafdde0cb49da9a9180e51e54da5
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://50c20d2eda58420c6e772a81efd1bfc1e46cfafdde0cb49da9a9180e51e54da5
          exitCode: 0
          finishedAt: "2025-06-23T08:52:03Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:44Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7n8s7
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://72a7fdaf6b9ab4186bdb21fd9eaa46fd5b12f7d92a507f31b08f23a18e30d733
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://72a7fdaf6b9ab4186bdb21fd9eaa46fd5b12f7d92a507f31b08f23a18e30d733
          exitCode: 0
          finishedAt: "2025-06-23T08:52:04Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:43Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7n8s7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://fc4df8f3c7a7ab817d8f464398287799327a241bb6dcd58fbdc0112a7a4ecb8e
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://fc4df8f3c7a7ab817d8f464398287799327a241bb6dcd58fbdc0112a7a4ecb8e
          exitCode: 0
          finishedAt: "2025-06-23T08:50:42Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7n8s7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.96
    podIPs:
    - ip: 10.244.0.96
    qosClass: Burstable
    startTime: "2025-06-23T08:50:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-730046287
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.validate-data-source
    creationTimestamp: "2025-06-23T08:50:10Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-data-validation-task-730046287
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "144890"
    uid: 9e49cbad-d283-460e-91c3-a6b959e267ef
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-730046287
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-645sc
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:50:00Z\"\nprint(f\"\U0001F50D
        Validating data source: {dataset}\")\n\n# Simulate data validation work\nvalidation_time
        = random.uniform(10, 30)  # 10-30 seconds\ntime.sleep(validation_time)\n\n#
        Random validation results\nrecords_found = random.randint(800, 1200)\nvalidation_score
        = random.uniform(0.85, 0.98)\n\nprint(f\"✅ Data validation complete:\")\nprint(f\"
        \ Records found: {records_found}\")\nprint(f\"  Validation score: {validation_score:.3f}\")\nprint(f\"
        \ Duration: {validation_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-730046287
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-645sc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-validation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\nprint(f\\\"\U0001F50D
          Validating data source: {dataset}\\\")\\n\\n# Simulate data validation work\\nvalidation_time
          = random.uniform(10, 30)  # 10-30 seconds\\ntime.sleep(validation_time)\\n\\n#
          Random validation results\\nrecords_found = random.randint(800, 1200)\\nvalidation_score
          = random.uniform(0.85, 0.98)\\n\\nprint(f\\\"✅ Data validation complete:\\\")\\nprint(f\\\"
          \ Records found: {records_found}\\\")\\nprint(f\\\"  Validation score: {validation_score:.3f}\\\")\\nprint(f\\\"
          \ Duration: {validation_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-data-validation-task-730046287\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-730046287
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-645sc
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-645sc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:38Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:37Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:37Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5ad09931f889dfc119ed9052f7327a3e60ceb77e993aa163d94b0fb3e06e7e34
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5ad09931f889dfc119ed9052f7327a3e60ceb77e993aa163d94b0fb3e06e7e34
          exitCode: 0
          finishedAt: "2025-06-23T08:50:36Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-645sc
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://5e711e5ebad3535822edb99ee2ebc93850959f78028fbe76ca6beb9b5d3faccb
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5e711e5ebad3535822edb99ee2ebc93850959f78028fbe76ca6beb9b5d3faccb
          exitCode: 0
          finishedAt: "2025-06-23T08:50:37Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-645sc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://09330168d25087d5b5fb9a58e690ea35116ebc56c5767e6609921b671997ab01
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://09330168d25087d5b5fb9a58e690ea35116ebc56c5767e6609921b671997ab01
          exitCode: 0
          finishedAt: "2025-06-23T08:50:11Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-645sc
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.95
    podIPs:
    - ip: 10.244.0.95
    qosClass: Burstable
    startTime: "2025-06-23T08:50:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-324510617
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.extract-features
    creationTimestamp: "2025-06-23T08:50:41Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-feature-extraction-task-324510617
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "145101"
    uid: 36d2058e-d241-480e-8102-808b20056360
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-324510617
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsz2b
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:50:00Z\"\nbatch_size
        = int(\"1000\")\n\nprint(f\"\U0001F527 Extracting features from: {dataset}\")\nprint(f\"Batch
        size: {batch_size}\")\n\n# Simulate feature extraction with batches\nbatches
        = 5\ntotal_features = 0\ntotal_time = 0\n\nfor batch in range(1, batches +
        1):\n    batch_time = random.uniform(15, 25)  # 15-25 seconds per batch\n
        \   features_extracted = random.randint(150, 250)\n    \n    print(f\"  Batch
        {batch}/{batches}: {batch_time:.1f}s, {features_extracted} features\")\n    time.sleep(batch_time)\n
        \   \n    total_features += features_extracted\n    total_time += batch_time\n\nprint(f\"✅
        Feature extraction complete:\")\nprint(f\"  Total features: {total_features}\")\nprint(f\"
        \ Total duration: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-324510617
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsz2b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"feature-extraction-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\nbatch_size
          = int(\\\"1000\\\")\\n\\nprint(f\\\"\U0001F527 Extracting features from:
          {dataset}\\\")\\nprint(f\\\"Batch size: {batch_size}\\\")\\n\\n# Simulate
          feature extraction with batches\\nbatches = 5\\ntotal_features = 0\\ntotal_time
          = 0\\n\\nfor batch in range(1, batches + 1):\\n    batch_time = random.uniform(15,
          25)  # 15-25 seconds per batch\\n    features_extracted = random.randint(150,
          250)\\n    \\n    print(f\\\"  Batch {batch}/{batches}: {batch_time:.1f}s,
          {features_extracted} features\\\")\\n    time.sleep(batch_time)\\n    \\n
          \   total_features += features_extracted\\n    total_time += batch_time\\n\\nprint(f\\\"✅
          Feature extraction complete:\\\")\\nprint(f\\\"  Total features: {total_features}\\\")\\nprint(f\\\"
          \ Total duration: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-feature-extraction-task-324510617\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-324510617
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsz2b
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-qsz2b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:22Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:43Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:20Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:20Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://953c0e9b12426b2b9a6758922ba4fa8ccf1894a324d423fd5944a453e1152665
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://953c0e9b12426b2b9a6758922ba4fa8ccf1894a324d423fd5944a453e1152665
          exitCode: 0
          finishedAt: "2025-06-23T08:52:19Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:44Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsz2b
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://f9cfaca3ed5d5b2acab8667bd5973054d15464347ea3c27c357475eaa415c5a8
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f9cfaca3ed5d5b2acab8667bd5973054d15464347ea3c27c357475eaa415c5a8
          exitCode: 0
          finishedAt: "2025-06-23T08:52:20Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:43Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsz2b
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://13fad8794dfa7f0ecb089e3438f028c1989006878f61943ef7123b24ceb4dad1
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://13fad8794dfa7f0ecb089e3438f028c1989006878f61943ef7123b24ceb4dad1
          exitCode: 0
          finishedAt: "2025-06-23T08:50:42Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsz2b
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.97
    podIPs:
    - ip: 10.244.0.97
    qosClass: Burstable
    startTime: "2025-06-23T08:50:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-2395909935
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.check-data-freshness
    creationTimestamp: "2025-06-23T08:50:10Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-freshness-check-task-2395909935
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "144862"
    uid: 1089663a-a135-4836-b2f5-1ca6cbe2536a
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-2395909935
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r5vng
        readOnly: true
    - args:
      - "import time\nimport random\nfrom datetime import datetime, timedelta\n\nprint(\"\U0001F4C5
        Checking data freshness...\")\n\ncheck_time = random.uniform(5, 15)\ntime.sleep(check_time)\n\n#
        Simulate freshness check\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
        6))\nfreshness_hours = (datetime.now() - last_update).total_seconds() / 3600\n\nprint(f\"✅
        Data freshness check complete:\")\nprint(f\"  Last update: {last_update.strftime('%Y-%m-%d
        %H:%M')}\")\nprint(f\"  Data age: {freshness_hours:.1f} hours\")\nprint(f\"
        \ Check duration: {check_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-2395909935
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r5vng
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"freshness-check-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\nfrom datetime import datetime, timedelta\\n\\nprint(\\\"\U0001F4C5
          Checking data freshness...\\\")\\n\\ncheck_time = random.uniform(5, 15)\\ntime.sleep(check_time)\\n\\n#
          Simulate freshness check\\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
          6))\\nfreshness_hours = (datetime.now() - last_update).total_seconds() /
          3600\\n\\nprint(f\\\"✅ Data freshness check complete:\\\")\\nprint(f\\\"
          \ Last update: {last_update.strftime('%Y-%m-%d %H:%M')}\\\")\\nprint(f\\\"
          \ Data age: {freshness_hours:.1f} hours\\\")\\nprint(f\\\"  Check duration:
          {check_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-freshness-check-task-2395909935\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-2395909935
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r5vng
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-r5vng
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:23Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:21Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:21Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b9deb4ccf8191a0c30d4c09c37525b4ce5cd842fafde93ff07758888942473f8
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b9deb4ccf8191a0c30d4c09c37525b4ce5cd842fafde93ff07758888942473f8
          exitCode: 0
          finishedAt: "2025-06-23T08:50:20Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r5vng
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://3cc8425169645496605b2e145b5d61824ef4c0fd2a35e3bb7fbd7f0b72e0b169
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3cc8425169645496605b2e145b5d61824ef4c0fd2a35e3bb7fbd7f0b72e0b169
          exitCode: 0
          finishedAt: "2025-06-23T08:50:21Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r5vng
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://dd7aba0dee732a722ee4f0ec0e8815260425dc320c1cec01a1e8fa23af9e2370
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://dd7aba0dee732a722ee4f0ec0e8815260425dc320c1cec01a1e8fa23af9e2370
          exitCode: 0
          finishedAt: "2025-06-23T08:50:11Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r5vng
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.94
    podIPs:
    - ip: 10.244.0.94
    qosClass: Burstable
    startTime: "2025-06-23T08:50:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-4151601137
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.evaluate-model
    creationTimestamp: "2025-06-23T08:54:20Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-model-evaluation-task-4151601137
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "145410"
    uid: 27b3595f-dd5e-4542-be88-7947975b98da
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-4151601137
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdwp8
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:50:00Z\"\nprint(f\"\U0001F4CA
        Evaluating model on: {dataset}\")\n\n# Simulate model evaluation\neval_time
        = random.uniform(20, 35)\n\n# Generate evaluation metrics\nprecision = random.uniform(0.78,
        0.92)\nrecall = random.uniform(0.75, 0.90)\nf1_score = 2 * (precision * recall)
        / (precision + recall)\n\ntime.sleep(eval_time)\n\nprint(f\"✅ Model evaluation
        complete:\")\nprint(f\"  Precision: {precision:.3f}\")\nprint(f\"  Recall:
        {recall:.3f}\")\nprint(f\"  F1-Score: {f1_score:.3f}\")\nprint(f\"  Evaluation
        time: {eval_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-4151601137
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdwp8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"model-evaluation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\nprint(f\\\"\U0001F4CA
          Evaluating model on: {dataset}\\\")\\n\\n# Simulate model evaluation\\neval_time
          = random.uniform(20, 35)\\n\\n# Generate evaluation metrics\\nprecision
          = random.uniform(0.78, 0.92)\\nrecall = random.uniform(0.75, 0.90)\\nf1_score
          = 2 * (precision * recall) / (precision + recall)\\n\\ntime.sleep(eval_time)\\n\\nprint(f\\\"✅
          Model evaluation complete:\\\")\\nprint(f\\\"  Precision: {precision:.3f}\\\")\\nprint(f\\\"
          \ Recall: {recall:.3f}\\\")\\nprint(f\\\"  F1-Score: {f1_score:.3f}\\\")\\nprint(f\\\"
          \ Evaluation time: {eval_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-model-evaluation-task-4151601137\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-4151601137
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdwp8
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-jdwp8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:58Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:22Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c1e30b001c16a0cd45668032dc28960b8f276128ab2852069adac9993e367473
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c1e30b001c16a0cd45668032dc28960b8f276128ab2852069adac9993e367473
          exitCode: 0
          finishedAt: "2025-06-23T08:54:55Z"
          reason: Completed
          startedAt: "2025-06-23T08:54:22Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdwp8
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://6883442455106099e71024d93e4334bb053e4bb8e12da66a2152d93f16a1aae0
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://6883442455106099e71024d93e4334bb053e4bb8e12da66a2152d93f16a1aae0
          exitCode: 0
          finishedAt: "2025-06-23T08:54:55Z"
          reason: Completed
          startedAt: "2025-06-23T08:54:22Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdwp8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://efcce861eaffb4fd1481b9160d60bb79a69819f39d6b6103fa173884206a5707
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://efcce861eaffb4fd1481b9160d60bb79a69819f39d6b6103fa173884206a5707
          exitCode: 0
          finishedAt: "2025-06-23T08:54:21Z"
          reason: Completed
          startedAt: "2025-06-23T08:54:21Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jdwp8
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.99
    podIPs:
    - ip: 10.244.0.99
    qosClass: Burstable
    startTime: "2025-06-23T08:54:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-2098493156
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.train-model
    creationTimestamp: "2025-06-23T08:52:23Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-model-training-task-2098493156
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "145310"
    uid: 7d68815f-2b1d-4dbd-929b-f5b619d8c9c3
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-2098493156
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pdds
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:50:00Z\"\nprint(f\"\U0001F916
        Training model on: {dataset}\")\n\n# Simulate model training epochs  \nepochs
        = 3\ntotal_time = 0\nfinal_accuracy = 0\n\nfor epoch in range(1, epochs +
        1):\n    epoch_time = random.uniform(25, 40)  # Longer training time\n    accuracy
        = random.uniform(0.70 + (epoch * 0.05), 0.85 + (epoch * 0.03))\n    loss =
        random.uniform(0.8 - (epoch * 0.15), 0.5 - (epoch * 0.05))\n    \n    print(f\"
        \ Epoch {epoch}/{epochs}: {epoch_time:.1f}s\")\n    print(f\"    Accuracy:
        {accuracy:.3f}, Loss: {loss:.3f}\")\n    \n    time.sleep(epoch_time)\n    total_time
        += epoch_time\n    final_accuracy = accuracy\n\nprint(f\"✅ Model training
        complete:\")\nprint(f\"  Final accuracy: {final_accuracy:.3f}\")\nprint(f\"
        \ Total training time: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-2098493156
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pdds
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"model-training-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\nprint(f\\\"\U0001F916
          Training model on: {dataset}\\\")\\n\\n# Simulate model training epochs
          \ \\nepochs = 3\\ntotal_time = 0\\nfinal_accuracy = 0\\n\\nfor epoch in
          range(1, epochs + 1):\\n    epoch_time = random.uniform(25, 40)  # Longer
          training time\\n    accuracy = random.uniform(0.70 + (epoch * 0.05), 0.85
          + (epoch * 0.03))\\n    loss = random.uniform(0.8 - (epoch * 0.15), 0.5
          - (epoch * 0.05))\\n    \\n    print(f\\\"  Epoch {epoch}/{epochs}: {epoch_time:.1f}s\\\")\\n
          \   print(f\\\"    Accuracy: {accuracy:.3f}, Loss: {loss:.3f}\\\")\\n    \\n
          \   time.sleep(epoch_time)\\n    total_time += epoch_time\\n    final_accuracy
          = accuracy\\n\\nprint(f\\\"✅ Model training complete:\\\")\\nprint(f\\\"
          \ Final accuracy: {final_accuracy:.3f}\\\")\\nprint(f\\\"  Total training
          time: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-model-training-task-2098493156\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-2098493156
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pdds
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-9pdds
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:12Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:26Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:10Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:54:10Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:52:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5a1972f099f4539463ee0a0281e71dca13678f29ddcb6ba6835ec3a6bc906e91
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5a1972f099f4539463ee0a0281e71dca13678f29ddcb6ba6835ec3a6bc906e91
          exitCode: 0
          finishedAt: "2025-06-23T08:54:09Z"
          reason: Completed
          startedAt: "2025-06-23T08:52:26Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pdds
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://1e984ced1196c78e0ae2f392f72600f674432c5ad8c948c9c818de29c7193b40
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1e984ced1196c78e0ae2f392f72600f674432c5ad8c948c9c818de29c7193b40
          exitCode: 0
          finishedAt: "2025-06-23T08:54:10Z"
          reason: Completed
          startedAt: "2025-06-23T08:52:26Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pdds
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://bfcdf4725d5095413d89c5e720c56adfdc7ee07d17df89cc091e15cce1d8860f
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bfcdf4725d5095413d89c5e720c56adfdc7ee07d17df89cc091e15cce1d8860f
          exitCode: 0
          finishedAt: "2025-06-23T08:52:24Z"
          reason: Completed
          startedAt: "2025-06-23T08:52:24Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pdds
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.98
    podIPs:
    - ip: 10.244.0.98
    qosClass: Burstable
    startTime: "2025-06-23T08:52:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-3135576084
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.save-results
    creationTimestamp: "2025-06-23T08:55:05Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-results-storage-task-3135576084
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "145534"
    uid: bc687ff6-ccc8-467a-99ab-737633880250
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-3135576084
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-brrv8
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T08:50:00Z\"\nprint(f\"\U0001F4BE
        Storing results for: {dataset}\")\n\n# Simulate results storage\nstorage_tasks
        = [\"save_model\", \"save_metrics\", \"update_registry\", \"create_report\"]\ntotal_time
        = 0\n\nfor task in storage_tasks:\n    task_time = random.uniform(8, 15)\n
        \   print(f\"  {task}: {task_time:.1f}s\")\n    time.sleep(task_time)\n    total_time
        += task_time\n\nprint(f\"✅ Results storage complete:\")\nprint(f\"  Total
        storage time: {total_time:.1f}s\")\nprint(f\"\U0001F517 Integration point:
        Use S3Utils for model artifact storage\") \n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-3135576084
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-brrv8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"results-storage-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\nprint(f\\\"\U0001F4BE
          Storing results for: {dataset}\\\")\\n\\n# Simulate results storage\\nstorage_tasks
          = [\\\"save_model\\\", \\\"save_metrics\\\", \\\"update_registry\\\", \\\"create_report\\\"]\\ntotal_time
          = 0\\n\\nfor task in storage_tasks:\\n    task_time = random.uniform(8,
          15)\\n    print(f\\\"  {task}: {task_time:.1f}s\\\")\\n    time.sleep(task_time)\\n
          \   total_time += task_time\\n\\nprint(f\\\"✅ Results storage complete:\\\")\\nprint(f\\\"
          \ Total storage time: {total_time:.1f}s\\\")\\nprint(f\\\"\U0001F517 Integration
          point: Use S3Utils for model artifact storage\\\") \\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-results-storage-task-3135576084\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-3135576084
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-brrv8
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-brrv8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:56:01Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:55:08Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:55:59Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:55:59Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:55:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://606ed8f58ccaeadae2c36f21b593332981f08fce69948f106e2ba18e3306d390
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://606ed8f58ccaeadae2c36f21b593332981f08fce69948f106e2ba18e3306d390
          exitCode: 0
          finishedAt: "2025-06-23T08:55:58Z"
          reason: Completed
          startedAt: "2025-06-23T08:55:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-brrv8
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://e69293711d3246305195bad2901c62b9bbcd77a38dfed31609bb0a09815e93f0
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e69293711d3246305195bad2901c62b9bbcd77a38dfed31609bb0a09815e93f0
          exitCode: 0
          finishedAt: "2025-06-23T08:55:59Z"
          reason: Completed
          startedAt: "2025-06-23T08:55:08Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-brrv8
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://bd4bfb62b4371a1371f1c1bbd9530262d428130914d569e6d3e751d4d10aaace
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://bd4bfb62b4371a1371f1c1bbd9530262d428130914d569e6d3e751d4d10aaace
          exitCode: 0
          finishedAt: "2025-06-23T08:55:06Z"
          reason: Completed
          startedAt: "2025-06-23T08:55:06Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-brrv8
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.100
    podIPs:
    - ip: 10.244.0.100
    qosClass: Burstable
    startTime: "2025-06-23T08:55:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-1788677024
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.pipeline-end
    creationTimestamp: "2025-06-23T08:56:09Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-timing-marker-1788677024
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "145582"
    uid: 542aa319-13ac-46c4-af98-a04b9ac53a00
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-1788677024
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q248h
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_complete\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750668600\",\n        \"uid\": \"553c189e-daf4-48c9-a109-3cc74920e762\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-23T08:50:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-1788677024
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q248h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_complete\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750668600\\\",\\n        \\\"uid\\\": \\\"553c189e-daf4-48c9-a109-3cc74920e762\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-timing-marker-1788677024\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-1788677024
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q248h
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-q248h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:56:17Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:56:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:56:16Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:56:16Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:56:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://de5d294c771716c7664fc6ec6db3a40ec693b1be456ab566a2df08da37f0e21b
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://de5d294c771716c7664fc6ec6db3a40ec693b1be456ab566a2df08da37f0e21b
          exitCode: 0
          finishedAt: "2025-06-23T08:56:15Z"
          reason: Completed
          startedAt: "2025-06-23T08:56:14Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q248h
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://1d7f70d6dfe0612832924723d13356eead5d2a57ad5273b9e014348b9ff60ce1
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1d7f70d6dfe0612832924723d13356eead5d2a57ad5273b9e014348b9ff60ce1
          exitCode: 0
          finishedAt: "2025-06-23T08:56:16Z"
          reason: Completed
          startedAt: "2025-06-23T08:56:13Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q248h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://1a0145d676821de2997e44ec403833240210e1c00da7892b88a792fe187ff91d
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1a0145d676821de2997e44ec403833240210e1c00da7892b88a792fe187ff91d
          exitCode: 0
          finishedAt: "2025-06-23T08:56:11Z"
          reason: Completed
          startedAt: "2025-06-23T08:56:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q248h
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.101
    podIPs:
    - ip: 10.244.0.101
    qosClass: Burstable
    startTime: "2025-06-23T08:56:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750668600-625732449
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750668600.pipeline-start
    creationTimestamp: "2025-06-23T08:50:00Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750668600
    name: ml-pipeline-cron-1750668600-timing-marker-625732449
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750668600
      uid: 553c189e-daf4-48c9-a109-3cc74920e762
    resourceVersion: "144793"
    uid: 88e02594-b523-4a22-b855-bdc66a9196f0
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-625732449
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svs5s
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_start\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750668600\",\n        \"uid\": \"553c189e-daf4-48c9-a109-3cc74920e762\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-23T08:50:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-625732449
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svs5s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750668600
      - name: ARGO_WORKFLOW_UID
        value: 553c189e-daf4-48c9-a109-3cc74920e762
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_start\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750668600\\\",\\n        \\\"uid\\\": \\\"553c189e-daf4-48c9-a109-3cc74920e762\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-23T08:50:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750668600/ml-pipeline-cron-1750668600-timing-marker-625732449\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750668600-625732449
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svs5s
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-svs5s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:06Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:01Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:03Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:03Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T08:50:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8864ce868348444f308be8d866101bb05f386a09b68a01a8efa1342e6caeffff
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8864ce868348444f308be8d866101bb05f386a09b68a01a8efa1342e6caeffff
          exitCode: 0
          finishedAt: "2025-06-23T08:50:03Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svs5s
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://ef3c1649be606ed35ff1c0fa0d01a240eeb6811bcce513ac0e363659eb2a63dc
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://ef3c1649be606ed35ff1c0fa0d01a240eeb6811bcce513ac0e363659eb2a63dc
          exitCode: 0
          finishedAt: "2025-06-23T08:50:04Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svs5s
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://01adc948707f957fb27ea273916a00037393f1321acc356bd628e48d8e4f0da8
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://01adc948707f957fb27ea273916a00037393f1321acc356bd628e48d8e4f0da8
          exitCode: 0
          finishedAt: "2025-06-23T08:50:01Z"
          reason: Completed
          startedAt: "2025-06-23T08:50:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-svs5s
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.93
    podIPs:
    - ip: 10.244.0.93
    qosClass: Burstable
    startTime: "2025-06-23T08:50:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-2799384863
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.augment-data
    creationTimestamp: "2025-06-23T09:00:40Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-data-augmentation-task-2799384863
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146276"
    uid: 2f398e56-0ee2-4e5f-8807-d0416b5a85ea
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2799384863
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-896gw
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T09:00:00Z\"\nprint(f\"\U0001F3A8
        Augmenting data: {dataset}\")\n\n# Simulate data augmentation techniques\ntechniques
        = [\"rotation\", \"scaling\", \"color_adjust\", \"noise_addition\", \"cropping\"]\naugmented_samples
        = 0\ntotal_time = 0\n\nfor technique in techniques:\n    technique_time =
        random.uniform(12, 20)\n    samples = random.randint(100, 200)\n    \n    print(f\"
        \ {technique}: {technique_time:.1f}s, {samples} samples\")\n    time.sleep(technique_time)\n
        \   \n    augmented_samples += samples\n    total_time += technique_time\n\nprint(f\"✅
        Data augmentation complete:\")\nprint(f\"  Total augmented samples: {augmented_samples}\")\nprint(f\"
        \ Total duration: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2799384863
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-896gw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-augmentation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\nprint(f\\\"\U0001F3A8
          Augmenting data: {dataset}\\\")\\n\\n# Simulate data augmentation techniques\\ntechniques
          = [\\\"rotation\\\", \\\"scaling\\\", \\\"color_adjust\\\", \\\"noise_addition\\\",
          \\\"cropping\\\"]\\naugmented_samples = 0\\ntotal_time = 0\\n\\nfor technique
          in techniques:\\n    technique_time = random.uniform(12, 20)\\n    samples
          = random.randint(100, 200)\\n    \\n    print(f\\\"  {technique}: {technique_time:.1f}s,
          {samples} samples\\\")\\n    time.sleep(technique_time)\\n    \\n    augmented_samples
          += samples\\n    total_time += technique_time\\n\\nprint(f\\\"✅ Data augmentation
          complete:\\\")\\nprint(f\\\"  Total augmented samples: {augmented_samples}\\\")\\nprint(f\\\"
          \ Total duration: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-data-augmentation-task-2799384863\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2799384863
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-896gw
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-896gw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:08Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:41Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:06Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:06Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cb92abcb77d255a216afb51c75bff7d5bfb3bd62a09431e9c20d5f734a4ecb16
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cb92abcb77d255a216afb51c75bff7d5bfb3bd62a09431e9c20d5f734a4ecb16
          exitCode: 0
          finishedAt: "2025-06-23T09:02:05Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-896gw
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://c2460ebb230a6bc8c391dc27de1e33b799285ffd29385f7a6e547f786bea4822
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c2460ebb230a6bc8c391dc27de1e33b799285ffd29385f7a6e547f786bea4822
          exitCode: 0
          finishedAt: "2025-06-23T09:02:06Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-896gw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://f64a18cb14e05d62f30d38537153883554f1039364fa638b6e29747d1feb35eb
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://f64a18cb14e05d62f30d38537153883554f1039364fa638b6e29747d1feb35eb
          exitCode: 0
          finishedAt: "2025-06-23T09:00:41Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-896gw
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.105
    podIPs:
    - ip: 10.244.0.105
    qosClass: Burstable
    startTime: "2025-06-23T09:00:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-3704039176
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.validate-data-source
    creationTimestamp: "2025-06-23T09:00:10Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-data-validation-task-3704039176
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146094"
    uid: cb586c64-fd5b-4edb-92c2-cf615cba5540
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-3704039176
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj9zd
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T09:00:00Z\"\nprint(f\"\U0001F50D
        Validating data source: {dataset}\")\n\n# Simulate data validation work\nvalidation_time
        = random.uniform(10, 30)  # 10-30 seconds\ntime.sleep(validation_time)\n\n#
        Random validation results\nrecords_found = random.randint(800, 1200)\nvalidation_score
        = random.uniform(0.85, 0.98)\n\nprint(f\"✅ Data validation complete:\")\nprint(f\"
        \ Records found: {records_found}\")\nprint(f\"  Validation score: {validation_score:.3f}\")\nprint(f\"
        \ Duration: {validation_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-3704039176
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj9zd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"data-validation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\nprint(f\\\"\U0001F50D
          Validating data source: {dataset}\\\")\\n\\n# Simulate data validation work\\nvalidation_time
          = random.uniform(10, 30)  # 10-30 seconds\\ntime.sleep(validation_time)\\n\\n#
          Random validation results\\nrecords_found = random.randint(800, 1200)\\nvalidation_score
          = random.uniform(0.85, 0.98)\\n\\nprint(f\\\"✅ Data validation complete:\\\")\\nprint(f\\\"
          \ Records found: {records_found}\\\")\\nprint(f\\\"  Validation score: {validation_score:.3f}\\\")\\nprint(f\\\"
          \ Duration: {validation_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-data-validation-task-3704039176\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-3704039176
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj9zd
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-rj9zd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:36Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:34Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:34Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://39332bb4c52be619be8bb46edbbaff867ffa4edf273caae21d80bae0b5398931
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://39332bb4c52be619be8bb46edbbaff867ffa4edf273caae21d80bae0b5398931
          exitCode: 0
          finishedAt: "2025-06-23T09:00:33Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj9zd
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://7b931e42c6af2801d610557a9025ceca776402522e1b4d49ab6b0c350bb5ce2c
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7b931e42c6af2801d610557a9025ceca776402522e1b4d49ab6b0c350bb5ce2c
          exitCode: 0
          finishedAt: "2025-06-23T09:00:34Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj9zd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://e87c6986f2d4c4713d6ecd7d548c2df935bec7ebe7ac4ea824f95e707ddb9688
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e87c6986f2d4c4713d6ecd7d548c2df935bec7ebe7ac4ea824f95e707ddb9688
          exitCode: 0
          finishedAt: "2025-06-23T09:00:11Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj9zd
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.103
    podIPs:
    - ip: 10.244.0.103
    qosClass: Burstable
    startTime: "2025-06-23T09:00:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-2569080542
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.extract-features
    creationTimestamp: "2025-06-23T09:00:40Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-feature-extraction-task-2569080542
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146323"
    uid: 57222738-506f-46a5-88e8-4bba31a2bc75
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2569080542
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9hf5
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T09:00:00Z\"\nbatch_size
        = int(\"1000\")\n\nprint(f\"\U0001F527 Extracting features from: {dataset}\")\nprint(f\"Batch
        size: {batch_size}\")\n\n# Simulate feature extraction with batches\nbatches
        = 5\ntotal_features = 0\ntotal_time = 0\n\nfor batch in range(1, batches +
        1):\n    batch_time = random.uniform(15, 25)  # 15-25 seconds per batch\n
        \   features_extracted = random.randint(150, 250)\n    \n    print(f\"  Batch
        {batch}/{batches}: {batch_time:.1f}s, {features_extracted} features\")\n    time.sleep(batch_time)\n
        \   \n    total_features += features_extracted\n    total_time += batch_time\n\nprint(f\"✅
        Feature extraction complete:\")\nprint(f\"  Total features: {total_features}\")\nprint(f\"
        \ Total duration: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2569080542
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9hf5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"feature-extraction-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\nbatch_size
          = int(\\\"1000\\\")\\n\\nprint(f\\\"\U0001F527 Extracting features from:
          {dataset}\\\")\\nprint(f\\\"Batch size: {batch_size}\\\")\\n\\n# Simulate
          feature extraction with batches\\nbatches = 5\\ntotal_features = 0\\ntotal_time
          = 0\\n\\nfor batch in range(1, batches + 1):\\n    batch_time = random.uniform(15,
          25)  # 15-25 seconds per batch\\n    features_extracted = random.randint(150,
          250)\\n    \\n    print(f\\\"  Batch {batch}/{batches}: {batch_time:.1f}s,
          {features_extracted} features\\\")\\n    time.sleep(batch_time)\\n    \\n
          \   total_features += features_extracted\\n    total_time += batch_time\\n\\nprint(f\\\"✅
          Feature extraction complete:\\\")\\nprint(f\\\"  Total features: {total_features}\\\")\\nprint(f\\\"
          \ Total duration: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-feature-extraction-task-2569080542\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2569080542
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9hf5
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-h9hf5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:30Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:41Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:28Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:28Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2c9de31a9e085c10aeae0a75d32e79509ab58a4ba741d8b272368afb04be3bf5
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://2c9de31a9e085c10aeae0a75d32e79509ab58a4ba741d8b272368afb04be3bf5
          exitCode: 0
          finishedAt: "2025-06-23T09:02:27Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9hf5
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://033dd9ae207dcda9ecbb4d4565004466814e6d19d22aee6de736910fc0a38a3e
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://033dd9ae207dcda9ecbb4d4565004466814e6d19d22aee6de736910fc0a38a3e
          exitCode: 0
          finishedAt: "2025-06-23T09:02:28Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:42Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9hf5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://3ffa0a1341d3ff7c7108b0b96bf20d16a469d281240597f5d1a3e10b0182b008
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3ffa0a1341d3ff7c7108b0b96bf20d16a469d281240597f5d1a3e10b0182b008
          exitCode: 0
          finishedAt: "2025-06-23T09:00:41Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h9hf5
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.106
    podIPs:
    - ip: 10.244.0.106
    qosClass: Burstable
    startTime: "2025-06-23T09:00:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-810739828
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.check-data-freshness
    creationTimestamp: "2025-06-23T09:00:10Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-freshness-check-task-810739828
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146064"
    uid: 37e7ccb1-5ef1-4899-a3f0-323548a1d807
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-810739828
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djcnp
        readOnly: true
    - args:
      - "import time\nimport random\nfrom datetime import datetime, timedelta\n\nprint(\"\U0001F4C5
        Checking data freshness...\")\n\ncheck_time = random.uniform(5, 15)\ntime.sleep(check_time)\n\n#
        Simulate freshness check\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
        6))\nfreshness_hours = (datetime.now() - last_update).total_seconds() / 3600\n\nprint(f\"✅
        Data freshness check complete:\")\nprint(f\"  Last update: {last_update.strftime('%Y-%m-%d
        %H:%M')}\")\nprint(f\"  Data age: {freshness_hours:.1f} hours\")\nprint(f\"
        \ Check duration: {check_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-810739828
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djcnp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"freshness-check-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\nfrom datetime import datetime, timedelta\\n\\nprint(\\\"\U0001F4C5
          Checking data freshness...\\\")\\n\\ncheck_time = random.uniform(5, 15)\\ntime.sleep(check_time)\\n\\n#
          Simulate freshness check\\nlast_update = datetime.now() - timedelta(hours=random.randint(1,
          6))\\nfreshness_hours = (datetime.now() - last_update).total_seconds() /
          3600\\n\\nprint(f\\\"✅ Data freshness check complete:\\\")\\nprint(f\\\"
          \ Last update: {last_update.strftime('%Y-%m-%d %H:%M')}\\\")\\nprint(f\\\"
          \ Data age: {freshness_hours:.1f} hours\\\")\\nprint(f\\\"  Check duration:
          {check_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-freshness-check-task-810739828\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-810739828
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djcnp
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-djcnp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:26Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:24Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:24Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7d048d6dfb6e339f9f2b18fbe3b35d9353ac5ecc05035e57ab254bf4b8ec12e3
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7d048d6dfb6e339f9f2b18fbe3b35d9353ac5ecc05035e57ab254bf4b8ec12e3
          exitCode: 0
          finishedAt: "2025-06-23T09:00:24Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djcnp
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://5c7755f72776c958fe0d06c33e7e1c6de792bfdf9987f9a2781c197cd0e65b9b
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5c7755f72776c958fe0d06c33e7e1c6de792bfdf9987f9a2781c197cd0e65b9b
          exitCode: 0
          finishedAt: "2025-06-23T09:00:24Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djcnp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://df31e02b2f4449e1eab53281ad21741a9f96ef4cbf5eb4cf59109f586956b6c0
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://df31e02b2f4449e1eab53281ad21741a9f96ef4cbf5eb4cf59109f586956b6c0
          exitCode: 0
          finishedAt: "2025-06-23T09:00:11Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:10Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-djcnp
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.104
    podIPs:
    - ip: 10.244.0.104
    qosClass: Burstable
    startTime: "2025-06-23T09:00:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-1275016866
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.evaluate-model
    creationTimestamp: "2025-06-23T09:04:39Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-model-evaluation-task-1275016866
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146632"
    uid: 1aef01f1-1095-42da-8aa1-51fec4da7272
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-1275016866
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtm2b
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T09:00:00Z\"\nprint(f\"\U0001F4CA
        Evaluating model on: {dataset}\")\n\n# Simulate model evaluation\neval_time
        = random.uniform(20, 35)\n\n# Generate evaluation metrics\nprecision = random.uniform(0.78,
        0.92)\nrecall = random.uniform(0.75, 0.90)\nf1_score = 2 * (precision * recall)
        / (precision + recall)\n\ntime.sleep(eval_time)\n\nprint(f\"✅ Model evaluation
        complete:\")\nprint(f\"  Precision: {precision:.3f}\")\nprint(f\"  Recall:
        {recall:.3f}\")\nprint(f\"  F1-Score: {f1_score:.3f}\")\nprint(f\"  Evaluation
        time: {eval_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-1275016866
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtm2b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"model-evaluation-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\nprint(f\\\"\U0001F4CA
          Evaluating model on: {dataset}\\\")\\n\\n# Simulate model evaluation\\neval_time
          = random.uniform(20, 35)\\n\\n# Generate evaluation metrics\\nprecision
          = random.uniform(0.78, 0.92)\\nrecall = random.uniform(0.75, 0.90)\\nf1_score
          = 2 * (precision * recall) / (precision + recall)\\n\\ntime.sleep(eval_time)\\n\\nprint(f\\\"✅
          Model evaluation complete:\\\")\\nprint(f\\\"  Precision: {precision:.3f}\\\")\\nprint(f\\\"
          \ Recall: {recall:.3f}\\\")\\nprint(f\\\"  F1-Score: {f1_score:.3f}\\\")\\nprint(f\\\"
          \ Evaluation time: {eval_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-model-evaluation-task-1275016866\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-1275016866
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtm2b
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-mtm2b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:05:16Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:04:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:05:14Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:05:14Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:04:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d4fe6801ad9fb2f94fc8ccfe4d388236bf498c4645d37d38fda171b208d2c761
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d4fe6801ad9fb2f94fc8ccfe4d388236bf498c4645d37d38fda171b208d2c761
          exitCode: 0
          finishedAt: "2025-06-23T09:05:14Z"
          reason: Completed
          startedAt: "2025-06-23T09:04:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtm2b
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://c09603c98c33db921fd9b1b32b23ceeee7b42b1b97225d4c86ddcd54101d656e
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c09603c98c33db921fd9b1b32b23ceeee7b42b1b97225d4c86ddcd54101d656e
          exitCode: 0
          finishedAt: "2025-06-23T09:05:15Z"
          reason: Completed
          startedAt: "2025-06-23T09:04:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtm2b
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://b19858452ae9280e9385a6bbaa47b38afea961dc6f4e0e1e029a0be545e16bd8
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b19858452ae9280e9385a6bbaa47b38afea961dc6f4e0e1e029a0be545e16bd8
          exitCode: 0
          finishedAt: "2025-06-23T09:04:40Z"
          reason: Completed
          startedAt: "2025-06-23T09:04:39Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtm2b
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.108
    podIPs:
    - ip: 10.244.0.108
    qosClass: Burstable
    startTime: "2025-06-23T09:04:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-880461761
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.train-model
    creationTimestamp: "2025-06-23T09:02:38Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-model-training-task-880461761
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146539"
    uid: 7d91fcd2-ec80-4082-841a-ef50ad2d827c
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-880461761
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sdnw6
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T09:00:00Z\"\nprint(f\"\U0001F916
        Training model on: {dataset}\")\n\n# Simulate model training epochs  \nepochs
        = 3\ntotal_time = 0\nfinal_accuracy = 0\n\nfor epoch in range(1, epochs +
        1):\n    epoch_time = random.uniform(25, 40)  # Longer training time\n    accuracy
        = random.uniform(0.70 + (epoch * 0.05), 0.85 + (epoch * 0.03))\n    loss =
        random.uniform(0.8 - (epoch * 0.15), 0.5 - (epoch * 0.05))\n    \n    print(f\"
        \ Epoch {epoch}/{epochs}: {epoch_time:.1f}s\")\n    print(f\"    Accuracy:
        {accuracy:.3f}, Loss: {loss:.3f}\")\n    \n    time.sleep(epoch_time)\n    total_time
        += epoch_time\n    final_accuracy = accuracy\n\nprint(f\"✅ Model training
        complete:\")\nprint(f\"  Final accuracy: {final_accuracy:.3f}\")\nprint(f\"
        \ Total training time: {total_time:.1f}s\")\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-880461761
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sdnw6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"model-training-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\nprint(f\\\"\U0001F916
          Training model on: {dataset}\\\")\\n\\n# Simulate model training epochs
          \ \\nepochs = 3\\ntotal_time = 0\\nfinal_accuracy = 0\\n\\nfor epoch in
          range(1, epochs + 1):\\n    epoch_time = random.uniform(25, 40)  # Longer
          training time\\n    accuracy = random.uniform(0.70 + (epoch * 0.05), 0.85
          + (epoch * 0.03))\\n    loss = random.uniform(0.8 - (epoch * 0.15), 0.5
          - (epoch * 0.05))\\n    \\n    print(f\\\"  Epoch {epoch}/{epochs}: {epoch_time:.1f}s\\\")\\n
          \   print(f\\\"    Accuracy: {accuracy:.3f}, Loss: {loss:.3f}\\\")\\n    \\n
          \   time.sleep(epoch_time)\\n    total_time += epoch_time\\n    final_accuracy
          = accuracy\\n\\nprint(f\\\"✅ Model training complete:\\\")\\nprint(f\\\"
          \ Final accuracy: {final_accuracy:.3f}\\\")\\nprint(f\\\"  Total training
          time: {total_time:.1f}s\\\")\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-model-training-task-880461761\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-880461761
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sdnw6
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-sdnw6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:04:31Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:40Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:04:29Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:04:29Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:02:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://34b53fc779ec0bbbf3673ff60b2a7abd79a8e77f035e0209cdc8c03ca2b0ad4e
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://34b53fc779ec0bbbf3673ff60b2a7abd79a8e77f035e0209cdc8c03ca2b0ad4e
          exitCode: 0
          finishedAt: "2025-06-23T09:04:28Z"
          reason: Completed
          startedAt: "2025-06-23T09:02:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sdnw6
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://e1f1c178c97cba473576e38439440d4fd46f8f9e15df0062491ee96ddede997a
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e1f1c178c97cba473576e38439440d4fd46f8f9e15df0062491ee96ddede997a
          exitCode: 0
          finishedAt: "2025-06-23T09:04:29Z"
          reason: Completed
          startedAt: "2025-06-23T09:02:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sdnw6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://41b4d60bbe84dfcb2437824d761e9b806a0b452ee7a983c0e4f64fe78c0bea7a
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://41b4d60bbe84dfcb2437824d761e9b806a0b452ee7a983c0e4f64fe78c0bea7a
          exitCode: 0
          finishedAt: "2025-06-23T09:02:39Z"
          reason: Completed
          startedAt: "2025-06-23T09:02:39Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-sdnw6
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.107
    podIPs:
    - ip: 10.244.0.107
    qosClass: Burstable
    startTime: "2025-06-23T09:02:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-2466969895
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.save-results
    creationTimestamp: "2025-06-23T09:05:23Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-results-storage-task-2466969895
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146741"
    uid: e9e10eff-05ce-411a-aaa2-643acdac1bf2
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2466969895
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5s4w
        readOnly: true
    - args:
      - "import time\nimport random\n\ndataset = \"cv-dataset-cron-2025-06-23T09:00:00Z\"\nprint(f\"\U0001F4BE
        Storing results for: {dataset}\")\n\n# Simulate results storage\nstorage_tasks
        = [\"save_model\", \"save_metrics\", \"update_registry\", \"create_report\"]\ntotal_time
        = 0\n\nfor task in storage_tasks:\n    task_time = random.uniform(8, 15)\n
        \   print(f\"  {task}: {task_time:.1f}s\")\n    time.sleep(task_time)\n    total_time
        += task_time\n\nprint(f\"✅ Results storage complete:\")\nprint(f\"  Total
        storage time: {total_time:.1f}s\")\nprint(f\"\U0001F517 Integration point:
        Use S3Utils for model artifact storage\") \n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2466969895
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5s4w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"results-storage-task\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          time\\nimport random\\n\\ndataset = \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\nprint(f\\\"\U0001F4BE
          Storing results for: {dataset}\\\")\\n\\n# Simulate results storage\\nstorage_tasks
          = [\\\"save_model\\\", \\\"save_metrics\\\", \\\"update_registry\\\", \\\"create_report\\\"]\\ntotal_time
          = 0\\n\\nfor task in storage_tasks:\\n    task_time = random.uniform(8,
          15)\\n    print(f\\\"  {task}: {task_time:.1f}s\\\")\\n    time.sleep(task_time)\\n
          \   total_time += task_time\\n\\nprint(f\\\"✅ Results storage complete:\\\")\\nprint(f\\\"
          \ Total storage time: {total_time:.1f}s\\\")\\nprint(f\\\"\U0001F517 Integration
          point: Use S3Utils for model artifact storage\\\") \\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-results-storage-task-2466969895\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-2466969895
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5s4w
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-b5s4w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:09Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:05:24Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:05:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9a4feff585f8b855b61fddbf33af7b48fc2a18c341b9c4cfcdc21e7b69a26818
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://9a4feff585f8b855b61fddbf33af7b48fc2a18c341b9c4cfcdc21e7b69a26818
          exitCode: 0
          finishedAt: "2025-06-23T09:06:07Z"
          reason: Completed
          startedAt: "2025-06-23T09:05:25Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5s4w
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://84afa9814c981cb1490124ff825eb7d3dab8a8f194d1df2d9f46f5897d8ee48e
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://84afa9814c981cb1490124ff825eb7d3dab8a8f194d1df2d9f46f5897d8ee48e
          exitCode: 0
          finishedAt: "2025-06-23T09:06:08Z"
          reason: Completed
          startedAt: "2025-06-23T09:05:25Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5s4w
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://1924771ffdb875be974452f4fe37798f3f1f49cc2bf77fb4279659acc7212883
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1924771ffdb875be974452f4fe37798f3f1f49cc2bf77fb4279659acc7212883
          exitCode: 0
          finishedAt: "2025-06-23T09:05:24Z"
          reason: Completed
          startedAt: "2025-06-23T09:05:24Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b5s4w
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.109
    podIPs:
    - ip: 10.244.0.109
    qosClass: Burstable
    startTime: "2025-06-23T09:05:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-102686031
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.pipeline-end
    creationTimestamp: "2025-06-23T09:06:17Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-timing-marker-102686031
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "146789"
    uid: 961d369a-addf-48d9-8d36-0cba527cc277
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-102686031
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sc8p
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_complete\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750669200\",\n        \"uid\": \"98416703-3228-49f7-a4cb-a1c6b1d5a2a9\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-23T09:00:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-102686031
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sc8p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_complete\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750669200\\\",\\n        \\\"uid\\\": \\\"98416703-3228-49f7-a4cb-a1c6b1d5a2a9\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-timing-marker-102686031\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-102686031
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sc8p
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-2sc8p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:24Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:19Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:21Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:21Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:06:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8516a8d380c20f6d6c9ca67c7ca94337da4e006e4b9b6eacdb288034cc24dada
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8516a8d380c20f6d6c9ca67c7ca94337da4e006e4b9b6eacdb288034cc24dada
          exitCode: 0
          finishedAt: "2025-06-23T09:06:21Z"
          reason: Completed
          startedAt: "2025-06-23T09:06:20Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sc8p
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://e21824b6fdc374ffa04e25418c4bc777dc59ac99b601f9fb47d77f87cfef0eee
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e21824b6fdc374ffa04e25418c4bc777dc59ac99b601f9fb47d77f87cfef0eee
          exitCode: 0
          finishedAt: "2025-06-23T09:06:22Z"
          reason: Completed
          startedAt: "2025-06-23T09:06:19Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sc8p
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://035a4180ee71ffbe0faea0add1ad7b0a9aa1af58e371d04c242e41949dfe0dc3
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://035a4180ee71ffbe0faea0add1ad7b0a9aa1af58e371d04c242e41949dfe0dc3
          exitCode: 0
          finishedAt: "2025-06-23T09:06:18Z"
          reason: Completed
          startedAt: "2025-06-23T09:06:18Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sc8p
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.110
    podIPs:
    - ip: 10.244.0.110
    qosClass: Burstable
    startTime: "2025-06-23T09:06:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: main
      workflows.argoproj.io/node-id: ml-pipeline-cron-1750669200-3543231162
      workflows.argoproj.io/node-name: ml-pipeline-cron-1750669200.pipeline-start
    creationTimestamp: "2025-06-23T09:00:00Z"
    generation: 1
    labels:
      workflows.argoproj.io/completed: "true"
      workflows.argoproj.io/workflow: ml-pipeline-cron-1750669200
    name: ml-pipeline-cron-1750669200-timing-marker-3543231162
    namespace: argo
    ownerReferences:
    - apiVersion: argoproj.io/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: Workflow
      name: ml-pipeline-cron-1750669200
      uid: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
    resourceVersion: "145995"
    uid: d4d73f3a-ce91-491b-807f-e204891402b7
  spec:
    containers:
    - command:
      - argoexec
      - wait
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: wait
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-3543231162
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: wait
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /tmp
        name: tmp-dir-argo
        subPath: "0"
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl76x
        readOnly: true
    - args:
      - "import json\nfrom datetime import datetime, timezone\n\nevent_type = \"cron_pipeline_start\"\ntask_name
        = \"ml-cron-pipeline\"\ntimestamp = datetime.now(timezone.utc).isoformat()\n\ntiming_record
        = {\n    \"@timestamp\": timestamp,\n    \"workflow\": {\n        \"name\":
        \"ml-pipeline-cron-1750669200\",\n        \"uid\": \"98416703-3228-49f7-a4cb-a1c6b1d5a2a9\",\n
        \       \"cron_schedule\": \"*/10 * * * *\",\n        \"dataset\": \"cv-dataset-cron-2025-06-23T09:00:00Z\"\n
        \   },\n    \"event\": {\n        \"type\": event_type,\n        \"task\":
        task_name\n    },\n    \"cron\": {\n        \"execution_time\": timestamp,\n
        \       \"expected_duration_minutes\": 8\n    }\n}\n\nprint(\"\U0001F4C5 CRON
        TIMING RECORD:\")\nprint(json.dumps(timing_record, indent=2))\n"
      command:
      - /var/run/argo/argoexec
      - emissary
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      - --
      - python
      - -c
      env:
      - name: ARGO_CONTAINER_NAME
        value: main
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-3543231162
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: python:3.9-slim
      imagePullPolicy: IfNotPresent
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl76x
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - argoexec
      - init
      - --loglevel
      - info
      - --log-format
      - text
      - --gloglevel
      - "0"
      env:
      - name: ARGO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: ARGO_POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      - name: ARGO_WORKFLOW_NAME
        value: ml-pipeline-cron-1750669200
      - name: ARGO_WORKFLOW_UID
        value: 98416703-3228-49f7-a4cb-a1c6b1d5a2a9
      - name: ARGO_CONTAINER_NAME
        value: init
      - name: ARGO_TEMPLATE
        value: "{\"name\":\"timing-marker\",\"inputs\":{},\"outputs\":{},\"metadata\":{},\"container\":{\"name\":\"\",\"image\":\"python:3.9-slim\",\"command\":[\"python\",\"-c\"],\"args\":[\"import
          json\\nfrom datetime import datetime, timezone\\n\\nevent_type = \\\"cron_pipeline_start\\\"\\ntask_name
          = \\\"ml-cron-pipeline\\\"\\ntimestamp = datetime.now(timezone.utc).isoformat()\\n\\ntiming_record
          = {\\n    \\\"@timestamp\\\": timestamp,\\n    \\\"workflow\\\": {\\n        \\\"name\\\":
          \\\"ml-pipeline-cron-1750669200\\\",\\n        \\\"uid\\\": \\\"98416703-3228-49f7-a4cb-a1c6b1d5a2a9\\\",\\n
          \       \\\"cron_schedule\\\": \\\"*/10 * * * *\\\",\\n        \\\"dataset\\\":
          \\\"cv-dataset-cron-2025-06-23T09:00:00Z\\\"\\n    },\\n    \\\"event\\\":
          {\\n        \\\"type\\\": event_type,\\n        \\\"task\\\": task_name\\n
          \   },\\n    \\\"cron\\\": {\\n        \\\"execution_time\\\": timestamp,\\n
          \       \\\"expected_duration_minutes\\\": 8\\n    }\\n}\\n\\nprint(\\\"\U0001F4C5
          CRON TIMING RECORD:\\\")\\nprint(json.dumps(timing_record, indent=2))\\n\"],\"resources\":{}},\"archiveLocation\":{\"archiveLogs\":true,\"s3\":{\"endpoint\":\"minio:9000\",\"bucket\":\"my-bucket\",\"insecure\":true,\"accessKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"accesskey\"},\"secretKeySecret\":{\"name\":\"my-minio-cred\",\"key\":\"secretkey\"},\"key\":\"ml-pipeline-cron-1750669200/ml-pipeline-cron-1750669200-timing-marker-3543231162\"}}}"
      - name: ARGO_NODE_ID
        value: ml-pipeline-cron-1750669200-3543231162
      - name: ARGO_INCLUDE_SCRIPT_OUTPUT
        value: "false"
      - name: ARGO_DEADLINE
        value: "0001-01-01T00:00:00Z"
      - name: ARGO_PROGRESS_FILE
        value: /var/run/argo/progress
      - name: ARGO_PROGRESS_PATCH_TICK_DURATION
        value: 1m0s
      - name: ARGO_PROGRESS_FILE_TICK_DURATION
        value: 3s
      image: quay.io/argoproj/argoexec:v3.6.10
      imagePullPolicy: IfNotPresent
      name: init
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl76x
        readOnly: true
    nodeName: argo-dev-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-run-argo
    - emptyDir: {}
      name: tmp-dir-argo
    - name: my-minio-cred
      secret:
        defaultMode: 420
        items:
        - key: accesskey
          path: accesskey
        - key: secretkey
          path: secretkey
        secretName: my-minio-cred
    - name: kube-api-access-xl76x
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:06Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:02Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:04Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:04Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T09:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3cafde6064af90fdfbe08560b6b01529518fb5246912f747c1c5bc04d5f58405
      image: docker.io/library/python:3.9-slim
      imageID: docker.io/library/python@sha256:a40cf9eba2c3ed9226afa9ace504f07ad30fe831343bb1c69f7a6707aadb7c21
      lastState: {}
      name: main
      ready: false
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3cafde6064af90fdfbe08560b6b01529518fb5246912f747c1c5bc04d5f58405
          exitCode: 0
          finishedAt: "2025-06-23T09:00:03Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl76x
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://c53dec2b4d98c0b0a456adba3200ecd8b40b931f2e390d5c510fae92f8bcacb3
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: wait
      ready: false
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c53dec2b4d98c0b0a456adba3200ecd8b40b931f2e390d5c510fae92f8bcacb3
          exitCode: 0
          finishedAt: "2025-06-23T09:00:04Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:02Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /tmp
        name: tmp-dir-argo
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl76x
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://a152c1b34dc0558207ee8e2059cdbbb3e6c120a3621d8cff1e1e8c3ad2398a0a
      image: quay.io/argoproj/argoexec:v3.6.10
      imageID: quay.io/argoproj/argoexec@sha256:701da40bf65f9699ea7a1e732dbca696590fecb835d1c8719f000fb60aa30133
      lastState: {}
      name: init
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a152c1b34dc0558207ee8e2059cdbbb3e6c120a3621d8cff1e1e8c3ad2398a0a
          exitCode: 0
          finishedAt: "2025-06-23T09:00:01Z"
          reason: Completed
          startedAt: "2025-06-23T09:00:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /argo/secret/my-minio-cred
        name: my-minio-cred
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/argo
        name: var-run-argo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xl76x
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Succeeded
    podIP: 10.244.0.102
    podIPs:
    - ip: 10.244.0.102
    qosClass: Burstable
    startTime: "2025-06-23T09:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-17T08:10:25Z"
    generateName: workflow-controller-776cd6bdbb-
    generation: 1
    labels:
      app: workflow-controller
      pod-template-hash: 776cd6bdbb
    name: workflow-controller-776cd6bdbb-ktnjd
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: workflow-controller-776cd6bdbb
      uid: 7962f382-d1f8-495f-a30a-030b056214e4
    resourceVersion: "107460"
    uid: 96ed73ea-fe65-483b-a4a7-e893e9d0b787
  spec:
    containers:
    - command:
      - workflow-controller
      env:
      - name: LEADER_ELECTION_IDENTITY
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/argoproj/workflow-controller:v3.6.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 6060
          scheme: HTTP
        initialDelaySeconds: 90
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 30
      name: workflow-controller
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 6060
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-62mj7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: argo-dev-control-plane
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000
    priorityClassName: workflow-controller
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
    serviceAccount: argo
    serviceAccountName: argo
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-62mj7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-21T10:39:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:27:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-22T12:27:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-17T08:10:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://998da3f356ed4a2a7f70a802b63f76198006c8d6ed7497f765793bb3b1266238
      image: quay.io/argoproj/workflow-controller:v3.6.10
      imageID: quay.io/argoproj/workflow-controller@sha256:c289d4cb4592022d48faf0085d657cee8a96ff49f0e978c7a1672736be7f2083
      lastState:
        terminated:
          containerID: containerd://d65c2f0b197bfb109ddc66ac36b03bad2c53a6afc93dab5d0f3bc4ce4a3ec89e
          exitCode: 2
          finishedAt: "2025-06-22T12:22:13Z"
          reason: Error
          startedAt: "2025-06-22T12:22:13Z"
      name: workflow-controller
      ready: true
      resources: {}
      restartCount: 27
      started: true
      state:
        running:
          startedAt: "2025-06-22T12:27:21Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 8737
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-62mj7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: BestEffort
    startTime: "2025-06-17T08:10:25Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"argo-server","namespace":"argo"},"spec":{"ports":[{"name":"web","port":2746,"targetPort":2746}],"selector":{"app":"argo-server"}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    name: argo-server
    namespace: argo
    resourceVersion: "587"
    uid: 882fa943-899b-4a3b-b50d-676b7362a9bb
  spec:
    clusterIP: 10.96.103.175
    clusterIPs:
    - 10.96.103.175
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: web
      port: 2746
      protocol: TCP
      targetPort: 2746
    selector:
      app: argo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"httpbin"},"name":"httpbin","namespace":"argo"},"spec":{"ports":[{"name":"api","port":9100,"protocol":"TCP","targetPort":80}],"selector":{"app":"httpbin"}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    labels:
      app: httpbin
    name: httpbin
    namespace: argo
    resourceVersion: "593"
    uid: f0a4c9f0-5080-4cc9-aade-3efd19611810
  spec:
    clusterIP: 10.96.172.188
    clusterIPs:
    - 10.96.172.188
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: api
      port: 9100
      protocol: TCP
      targetPort: 80
    selector:
      app: httpbin
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"minio"},"name":"minio","namespace":"argo"},"spec":{"ports":[{"name":"api","port":9000,"protocol":"TCP","targetPort":9000},{"name":"dashboard","port":9001,"protocol":"TCP","targetPort":9001}],"selector":{"app":"minio"}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    labels:
      app: minio
    name: minio
    namespace: argo
    resourceVersion: "598"
    uid: bd136a3c-079a-4e37-8ac2-3c189da30c75
  spec:
    clusterIP: 10.96.51.185
    clusterIPs:
    - 10.96.51.185
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: api
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: dashboard
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: minio
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"argo-server","namespace":"argo"},"spec":{"selector":{"matchLabels":{"app":"argo-server"}},"template":{"metadata":{"labels":{"app":"argo-server"}},"spec":{"containers":[{"args":["server","--auth-mode","server","--auth-mode","client"],"env":[],"image":"quay.io/argoproj/argocli:v3.6.10","name":"argo-server","ports":[{"containerPort":2746,"name":"web"}],"readinessProbe":{"httpGet":{"path":"/","port":2746,"scheme":"HTTPS"},"initialDelaySeconds":10,"periodSeconds":20},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true},"volumeMounts":[{"mountPath":"/tmp","name":"tmp"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true},"serviceAccountName":"argo-server","volumes":[{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    name: argo-server
    namespace: argo
    resourceVersion: "106384"
    uid: 027309b9-5aed-42d2-af4e-e27e64b95811
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: argo-server
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: argo-server
      spec:
        containers:
        - args:
          - server
          - --auth-mode
          - server
          - --auth-mode
          - client
          image: quay.io/argoproj/argocli:v3.6.10
          imagePullPolicy: IfNotPresent
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: argo-server
        serviceAccountName: argo-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-17T08:10:25Z"
      lastUpdateTime: "2025-06-17T08:18:05Z"
      message: ReplicaSet "argo-server-7f996ddf4c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T12:12:28Z"
      lastUpdateTime: "2025-06-22T12:12:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"httpbin"},"name":"httpbin","namespace":"argo"},"spec":{"selector":{"matchLabels":{"app":"httpbin"}},"template":{"metadata":{"labels":{"app":"httpbin"}},"spec":{"automountServiceAccountToken":false,"containers":[{"image":"kong/httpbin","livenessProbe":{"httpGet":{"path":"/get","port":80},"initialDelaySeconds":5,"periodSeconds":10},"name":"main","ports":[{"containerPort":80,"name":"api"}],"readinessProbe":{"httpGet":{"path":"/get","port":80},"initialDelaySeconds":5,"periodSeconds":10}}]}}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    labels:
      app: httpbin
    name: httpbin
    namespace: argo
    resourceVersion: "49141"
    uid: 9869f9a3-50a2-4c96-85b0-ed8936656708
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: httpbin
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: httpbin
      spec:
        automountServiceAccountToken: false
        containers:
        - image: kong/httpbin
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /get
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /get
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-17T08:10:25Z"
      lastUpdateTime: "2025-06-17T08:11:59Z"
      message: ReplicaSet "httpbin-79f598f4cc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-21T12:06:26Z"
      lastUpdateTime: "2025-06-21T12:06:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"minio"},"name":"minio","namespace":"argo"},"spec":{"selector":{"matchLabels":{"app":"minio"}},"template":{"metadata":{"labels":{"app":"minio"}},"spec":{"automountServiceAccountToken":false,"containers":[{"command":["minio","server","--console-address",":9001","/data"],"env":[{"name":"MINIO_ACCESS_KEY","value":"admin"},{"name":"MINIO_SECRET_KEY","value":"password"}],"image":"minio/minio:RELEASE.2022-11-17T23-20-09Z","lifecycle":{"postStart":{"exec":{"command":["mkdir","-p","/data/my-bucket"]}}},"livenessProbe":{"httpGet":{"path":"/minio/health/live","port":9000},"initialDelaySeconds":5,"periodSeconds":10},"name":"main","ports":[{"containerPort":9000,"name":"api"},{"containerPort":9001,"name":"dashboard"}],"readinessProbe":{"httpGet":{"path":"/minio/health/ready","port":9000},"initialDelaySeconds":5,"periodSeconds":10}}]}}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    labels:
      app: minio
    name: minio
    namespace: argo
    resourceVersion: "107057"
    uid: 70902f8c-b9b7-42d0-9f4d-c60b7d7da43b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: minio
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: minio
      spec:
        automountServiceAccountToken: false
        containers:
        - command:
          - minio
          - server
          - --console-address
          - :9001
          - /data
          env:
          - name: MINIO_ACCESS_KEY
            value: admin
          - name: MINIO_SECRET_KEY
            value: password
          image: minio/minio:RELEASE.2022-11-17T23-20-09Z
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                - mkdir
                - -p
                - /data/my-bucket
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 9000
            name: api
            protocol: TCP
          - containerPort: 9001
            name: dashboard
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-17T08:10:25Z"
      lastUpdateTime: "2025-06-17T08:17:32Z"
      message: ReplicaSet "minio-74fbfc7f88" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T12:22:36Z"
      lastUpdateTime: "2025-06-22T12:22:36Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"workflow-controller","namespace":"argo"},"spec":{"selector":{"matchLabels":{"app":"workflow-controller"}},"template":{"metadata":{"labels":{"app":"workflow-controller"}},"spec":{"containers":[{"args":[],"command":["workflow-controller"],"env":[{"name":"LEADER_ELECTION_IDENTITY","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.name"}}}],"image":"quay.io/argoproj/workflow-controller:v3.6.10","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":6060},"initialDelaySeconds":90,"periodSeconds":60,"timeoutSeconds":30},"name":"workflow-controller","ports":[{"containerPort":9090,"name":"metrics"},{"containerPort":6060}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true}}],"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"workflow-controller","securityContext":{"runAsNonRoot":true},"serviceAccountName":"argo"}}}}
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    name: workflow-controller
    namespace: argo
    resourceVersion: "107462"
    uid: 228abc64-fce3-4467-9d94-d13e62021755
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: workflow-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: workflow-controller
      spec:
        containers:
        - command:
          - workflow-controller
          env:
          - name: LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/argoproj/workflow-controller:v3.6.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6060
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: workflow-controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 6060
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: workflow-controller
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: argo
        serviceAccountName: argo
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-17T08:10:25Z"
      lastUpdateTime: "2025-06-17T08:18:06Z"
      message: ReplicaSet "workflow-controller-776cd6bdbb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-22T12:27:21Z"
      lastUpdateTime: "2025-06-22T12:27:21Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    labels:
      app: argo-server
      pod-template-hash: 7f996ddf4c
    name: argo-server-7f996ddf4c
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argo-server
      uid: 027309b9-5aed-42d2-af4e-e27e64b95811
    resourceVersion: "106381"
    uid: f78cdc2e-5816-4a96-a799-2da7d567c7a4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: argo-server
        pod-template-hash: 7f996ddf4c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: argo-server
          pod-template-hash: 7f996ddf4c
      spec:
        containers:
        - args:
          - server
          - --auth-mode
          - server
          - --auth-mode
          - client
          image: quay.io/argoproj/argocli:v3.6.10
          imagePullPolicy: IfNotPresent
          name: argo-server
          ports:
          - containerPort: 2746
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2746
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: argo-server
        serviceAccountName: argo-server
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    labels:
      app: httpbin
      pod-template-hash: 79f598f4cc
    name: httpbin-79f598f4cc
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: httpbin
      uid: 9869f9a3-50a2-4c96-85b0-ed8936656708
    resourceVersion: "49134"
    uid: ec6842d4-0e26-43d7-bcf1-8ca15c16cf97
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: httpbin
        pod-template-hash: 79f598f4cc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: httpbin
          pod-template-hash: 79f598f4cc
      spec:
        automountServiceAccountToken: false
        containers:
        - image: kong/httpbin
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /get
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 80
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /get
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    labels:
      app: minio
      pod-template-hash: 74fbfc7f88
    name: minio-74fbfc7f88
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: minio
      uid: 70902f8c-b9b7-42d0-9f4d-c60b7d7da43b
    resourceVersion: "107054"
    uid: 1663844f-28d7-4591-98ae-06e71c6b942e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: minio
        pod-template-hash: 74fbfc7f88
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: minio
          pod-template-hash: 74fbfc7f88
      spec:
        automountServiceAccountToken: false
        containers:
        - command:
          - minio
          - server
          - --console-address
          - :9001
          - /data
          env:
          - name: MINIO_ACCESS_KEY
            value: admin
          - name: MINIO_SECRET_KEY
            value: password
          image: minio/minio:RELEASE.2022-11-17T23-20-09Z
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                - mkdir
                - -p
                - /data/my-bucket
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: main
          ports:
          - containerPort: 9000
            name: api
            protocol: TCP
          - containerPort: 9001
            name: dashboard
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /minio/health/ready
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-06-17T08:10:25Z"
    generation: 1
    labels:
      app: workflow-controller
      pod-template-hash: 776cd6bdbb
    name: workflow-controller-776cd6bdbb
    namespace: argo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: workflow-controller
      uid: 228abc64-fce3-4467-9d94-d13e62021755
    resourceVersion: "107461"
    uid: 7962f382-d1f8-495f-a30a-030b056214e4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: workflow-controller
        pod-template-hash: 776cd6bdbb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: workflow-controller
          pod-template-hash: 776cd6bdbb
      spec:
        containers:
        - command:
          - workflow-controller
          env:
          - name: LEADER_ELECTION_IDENTITY
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/argoproj/workflow-controller:v3.6.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6060
              scheme: HTTP
            initialDelaySeconds: 90
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
          name: workflow-controller
          ports:
          - containerPort: 9090
            name: metrics
            protocol: TCP
          - containerPort: 6060
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: workflow-controller
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
        serviceAccount: argo
        serviceAccountName: argo
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
